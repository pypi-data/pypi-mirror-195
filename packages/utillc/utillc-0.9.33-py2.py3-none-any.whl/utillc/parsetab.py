
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSCOLONleftTIMESDIVIDErightUMINUSCOLON COMMA DIVIDE DIVIDE2 DOT EKON EKOT EKOX EQUALS FLOAT LBRACKET LPAREN MINUS NAME NUMBER PLUS RBRACKET RPAREN STRING TIMEStop : expressionstop : EKON expressionstop : EKOX expressionstop : EKOT expressionsexpressions : expressionexpressions : expressions COMMA expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression EQUALS expression\n                  | expression DIVIDE2 expression\n                  | expression DIVIDE expression name : expression DOT dot_namesexpression : MINUS expression %prec UMINUSexpression : LPAREN expressions RPAREN\n                  | expression LBRACKET expressionsBE RBRACKET\n                  | name LPAREN expressionsV RPAREN\n    expression : NUMBERexpression : FLOATexpression : nameexpression : STRINGdot_names : NAMEexpressionsBE : expressionsBE : expressionsBEE COMMA expressionsBEexpressionsBE : expressionsBEEexpressionsBEE : expressionsBEE : expressionexpressionsBEE : COLONexpressionsBEE : expression COLON expressionsBEEexpressionsV : expressionsV : expressions name : NAME'
    
_lr_action_items = {'EKON':([0,],[3,]),'EKOX':([0,],[4,]),'EKOT':([0,],[5,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,18,19,20,21,22,23,24,26,28,29,30,31,32,33,34,35,36,40,41,42,45,46,47,48,],[7,7,7,7,19,7,7,-20,-18,-19,-21,-32,7,7,7,7,7,7,7,7,-14,7,19,-7,-8,-9,19,19,-12,19,-13,-22,-15,7,-16,7,-17,]),'LPAREN':([0,3,4,5,7,8,9,13,14,18,19,20,21,22,23,24,28,40,41,45,47,],[8,8,8,8,8,8,28,-32,8,8,8,8,8,8,8,8,8,-13,-22,8,8,]),'NUMBER':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'FLOAT':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'STRING':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'NAME':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,25,28,45,47,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,41,13,13,13,]),'$end':([1,2,6,9,10,11,12,13,15,16,17,26,29,30,31,32,33,34,35,40,41,42,46,48,],[0,-1,-5,-20,-18,-19,-21,-32,-2,-3,-4,-14,-6,-7,-8,-9,-10,-11,-12,-13,-22,-15,-16,-17,]),'COMMA':([2,6,9,10,11,12,13,15,16,17,24,26,27,29,30,31,32,33,34,35,36,38,39,40,41,42,44,45,46,47,48,49,],[14,-5,-20,-18,-19,-21,-32,14,14,14,-26,-14,14,-6,-7,-8,-9,-10,-11,-12,-27,47,-28,-13,-22,-15,14,-26,-16,-26,-17,-29,]),'RPAREN':([6,9,10,11,12,13,26,27,28,29,30,31,32,33,34,35,40,41,42,43,44,46,48,],[-5,-20,-18,-19,-21,-32,-14,42,-30,-6,-7,-8,-9,-10,-11,-12,-13,-22,-15,48,-31,-16,-17,]),'PLUS':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,48,],[18,-20,-18,-19,-21,-32,-14,18,-7,-8,-9,18,18,-12,18,-13,-22,-15,-16,-17,]),'TIMES':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,48,],[20,-20,-18,-19,-21,-32,-14,20,20,20,-9,20,20,-12,20,-13,-22,-15,-16,-17,]),'EQUALS':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,48,],[21,-20,-18,-19,-21,-32,-14,21,-7,-8,-9,21,21,-12,21,-13,-22,-15,-16,-17,]),'DIVIDE2':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,48,],[22,-20,-18,-19,-21,-32,-14,22,-7,-8,-9,22,22,-12,22,-13,-22,-15,-16,-17,]),'DIVIDE':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,48,],[23,-20,-18,-19,-21,-32,-14,23,23,23,-9,23,23,-12,23,-13,-22,-15,-16,-17,]),'LBRACKET':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,48,],[24,-20,-18,-19,-21,-32,-14,24,-7,-8,-9,24,24,-12,24,-13,-22,-15,-16,-17,]),'DOT':([6,9,10,11,12,13,26,29,30,31,32,33,34,35,36,40,41,42,46,48,],[25,-20,-18,-19,-21,-32,-14,25,-7,-8,-9,25,25,-12,25,-13,-22,-15,-16,-17,]),'COLON':([9,10,11,12,13,24,26,30,31,32,33,34,35,36,40,41,42,45,46,47,48,],[-20,-18,-19,-21,-32,39,-14,-7,-8,-9,-10,-11,-12,45,-13,-22,-15,39,-16,39,-17,]),'RBRACKET':([9,10,11,12,13,24,26,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,],[-20,-18,-19,-21,-32,-23,-14,-7,-8,-9,-10,-11,-12,-27,46,-25,-28,-13,-22,-15,-26,-16,-23,-17,-29,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'top':([0,],[1,]),'expressions':([0,3,4,5,8,28,],[2,15,16,17,27,44,]),'expression':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[6,6,6,6,26,6,29,30,31,32,33,34,35,36,6,36,36,]),'name':([0,3,4,5,7,8,14,18,19,20,21,22,23,24,28,45,47,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'expressionsBE':([24,47,],[37,50,]),'expressionsBEE':([24,45,47,],[38,49,38,]),'dot_names':([25,],[40,]),'expressionsV':([28,],[43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> top","S'",1,None,None,None),
  ('top -> expressions','top',1,'p_top','utillc.py',140),
  ('top -> EKON expressions','top',2,'p_top_1','utillc.py',144),
  ('top -> EKOX expressions','top',2,'p_top_2','utillc.py',147),
  ('top -> EKOT expressions','top',2,'p_top_3','utillc.py',151),
  ('expressions -> expression','expressions',1,'p_expressions_1','utillc.py',155),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions_2','utillc.py',159),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','utillc.py',164),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','utillc.py',165),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','utillc.py',166),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','utillc.py',167),
  ('expression -> expression DIVIDE2 expression','expression',3,'p_expression_binop','utillc.py',168),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','utillc.py',169),
  ('name -> expression DOT dot_names','name',3,'p_expression_dot','utillc.py',173),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','utillc.py',177),
  ('expression -> LPAREN expressions RPAREN','expression',3,'p_expression_group','utillc.py',183),
  ('expression -> expression LBRACKET expressionsBE RBRACKET','expression',4,'p_expression_group','utillc.py',184),
  ('expression -> name LPAREN expressionsV RPAREN','expression',4,'p_expression_group','utillc.py',185),
  ('expression -> NUMBER','expression',1,'p_expression_number','utillc.py',195),
  ('expression -> FLOAT','expression',1,'p_expression_float','utillc.py',199),
  ('expression -> name','expression',1,'p_expression_name','utillc.py',203),
  ('expression -> STRING','expression',1,'p_expression_string','utillc.py',207),
  ('dot_names -> NAME','dot_names',1,'p_dot_names_1','utillc.py',211),
  ('expressionsBE -> <empty>','expressionsBE',0,'p_expressionsBE_1','utillc.py',220),
  ('expressionsBE -> expressionsBEE COMMA expressionsBE','expressionsBE',3,'p_expressionsBE_2','utillc.py',224),
  ('expressionsBE -> expressionsBEE','expressionsBE',1,'p_expressionsBE_3','utillc.py',228),
  ('expressionsBEE -> <empty>','expressionsBEE',0,'p_expressionsBEE_0','utillc.py',232),
  ('expressionsBEE -> expression','expressionsBEE',1,'p_expressionsBEE_1','utillc.py',235),
  ('expressionsBEE -> COLON','expressionsBEE',1,'p_expressionsBEE_2','utillc.py',238),
  ('expressionsBEE -> expression COLON expressionsBEE','expressionsBEE',3,'p_expressionsBEE_3','utillc.py',241),
  ('expressionsV -> <empty>','expressionsV',0,'p_expressionsV_1','utillc.py',246),
  ('expressionsV -> expressions','expressionsV',1,'p_expressionsV_2','utillc.py',250),
  ('name -> NAME','name',1,'p_name_1','utillc.py',258),
]
