{"version":3,"file":"diffViewerPageModel.js","names":["RB","DiffViewerPage","ReviewablePage","extend","defaults","_","canDownloadDiff","filenamePatterns","numDiffs","prototype","constructor","commentsHint","DiffCommentsHint","commits","DiffCommitCollection","commitHistoryDiff","CommitHistoryDiffEntryCollection","files","DiffFileCollection","pagination","Pagination","revision","DiffRevision","apply","arguments","initialize","diffReviewables","DiffReviewableCollection","reviewRequest","get","watchFiles","parse","rsp","_parseDiffContext","call","loadDiffRevision","options","length","undefined","reviewRequestURL","url","queryData","push","name","value","interdiffRevision","baseCommitID","tipCommitID","page","Djblets","buildURL","baseURL","$","ajax","done","set","diff_context","comments_hint","reset","commit_history_diff","interdiff_revision","filename_patterns","num_diffs"],"sources":["diffViewerPageModel.es6.js"],"sourcesContent":["/**\n * The model for the diff viewer page.\n *\n * This handles all attribute storage and diff context parsing needed to\n * display and update the diff viewer.\n *\n * Model Attributes:\n *     canDownloadDiff (boolean):\n *         Whether a diff file can be downloaded, given the current revision\n *         state.\n *\n *     filenamePatterns (Array):\n *         A list of filenames or patterns used to filter the diff viewer.\n *         This is optional.\n *\n *     numDiffs (number):\n *         The total number of diffs.\n */\nRB.DiffViewerPage = RB.ReviewablePage.extend({\n    defaults: _.defaults({\n        canDownloadDiff: false,\n        filenamePatterns: null,\n        numDiffs: 1,\n    }, RB.ReviewablePage.prototype.defaults),\n\n    /**\n     * Construct the page's instance.\n     *\n     * This defines child objects for managing state related to the page\n     * prior to parsing the provided attributes payload and initializing\n     * the instance.\n     *\n     * NOTE: this explicitly doesn't use the shorthand \"member function\" syntax\n     * because otherwise browsers get confused about whether this is a class\n     * constructor.\n     */\n    constructor: function constructor() {\n        this.commentsHint = new RB.DiffCommentsHint();\n        this.commits = new RB.DiffCommitCollection();\n        this.commitHistoryDiff = new RB.CommitHistoryDiffEntryCollection();\n        this.files = new RB.DiffFileCollection();\n        this.pagination = new RB.Pagination();\n        this.revision = new RB.DiffRevision();\n\n        RB.ReviewablePage.apply(this, arguments);\n    },\n\n    /**\n     * Initialize the page.\n     *\n     * This will begin listening for events on the page and set up default\n     * state.\n     */\n    initialize() {\n        RB.ReviewablePage.prototype.initialize.apply(this, arguments);\n\n        this.diffReviewables = new RB.DiffReviewableCollection([], {\n            reviewRequest: this.get('reviewRequest'),\n        });\n        this.diffReviewables.watchFiles(this.files);\n    },\n\n    /**\n     * Parse the data for the page.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload to parse.\n     *\n     * Returns:\n     *     object:\n     *     The returned attributes.\n     */\n    parse(rsp) {\n        return _.extend(this._parseDiffContext(rsp),\n                        RB.ReviewablePage.prototype.parse.call(this, rsp));\n    },\n\n    /**\n     * Load a new diff from the server.\n     *\n     * Args:\n     *     options (object):\n     *         The options for the diff to load.\n     *\n     * Option Args:\n     *     baseCommitID (number):\n     *         The primary key of the base commit to base the diff off of.\n     *\n     *     filenames (string):\n     *         A comma-separated string of filenames or filename patterns to\n     *         load.\n     *\n     *     page (number):\n     *         The page number to load. Defaults to the first page.\n     *\n     *     revision (number):\n     *         The base revision. If displaying an interdiff, this will be\n     *         the first revision in the range.\n     *\n     *     interdiffRevision (number):\n     *         The optional interdiff revision, representing the ending\n     *         revision in a range.\n     *\n     *     tipCommitID (number):\n     *         The primary key of the tip commit to base the diff off of.\n     */\n    loadDiffRevision(options={}) {\n        const reviewRequestURL = this.get('reviewRequest').url();\n        const queryData = [];\n\n        if (options.revision) {\n            queryData.push({\n                name: 'revision',\n                value: options.revision,\n            });\n        }\n\n        if (options.interdiffRevision) {\n            queryData.push({\n                name: 'interdiff-revision',\n                value: options.interdiffRevision,\n            });\n        } else {\n            if (options.baseCommitID) {\n                queryData.push({\n                    name: 'base-commit-id',\n                    value: options.baseCommitID,\n                });\n            }\n\n            if (options.tipCommitID) {\n                queryData.push({\n                    name: 'tip-commit-id',\n                    value: options.tipCommitID,\n                });\n            }\n        }\n\n        if (options.page && options.page !== 1) {\n            queryData.push({\n                name: 'page',\n                value: options.page,\n            });\n        }\n\n        if (options.filenamePatterns) {\n            queryData.push({\n                name: 'filenames',\n                value: options.filenamePatterns,\n            });\n        }\n\n        const url = Djblets.buildURL({\n            baseURL: `${reviewRequestURL}diff-context/`,\n            queryData: queryData,\n        });\n\n        $.ajax(url)\n            .done(rsp => this.set(this._parseDiffContext(rsp.diff_context)));\n    },\n\n    /**\n     * Parse context for a displayed diff.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload to parse.\n     *\n     * Returns:\n     *     object:\n     *     The returned attributes.\n     */\n    _parseDiffContext(rsp) {\n        if (rsp.comments_hint) {\n            this.commentsHint.set(this.commentsHint.parse(rsp.comments_hint));\n        }\n\n        if (rsp.files) {\n            this.files.reset(rsp.files, {parse: true});\n        }\n\n        if (rsp.pagination) {\n            this.pagination.set(this.pagination.parse(rsp.pagination));\n        }\n\n        if (rsp.revision) {\n            this.revision.set(this.revision.parse(rsp.revision));\n        }\n\n        this.commitHistoryDiff.reset(rsp.commit_history_diff || [],\n                                     {parse: true});\n\n        if (rsp.commits) {\n            /*\n             * The RB.DiffCommitListView listens for the reset event on the\n             * commits collection to trigger a render, so it must be updated\n             * **after** the commit history is updated.\n             */\n            this.commits.reset(rsp.commits, {parse: true});\n        }\n\n        return {\n            canDownloadDiff: (rsp.revision &&\n                              rsp.revision.interdiff_revision === null),\n            filenamePatterns: rsp.filename_patterns || null,\n            numDiffs: rsp.num_diffs || 0,\n        };\n    },\n});\n"],"mappings":"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"}