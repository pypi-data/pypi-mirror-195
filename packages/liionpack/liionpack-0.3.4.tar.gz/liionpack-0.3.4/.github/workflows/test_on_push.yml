# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: liionpack

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]
  schedule:
    - cron:  '0 3 * * *'

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: always.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  style:
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v3
    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Lint with flake8
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        flake8

  pip-build:
    needs: style
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install latex
      run: |
        sudo apt-get update
        sudo apt-get install \
          texlive-latex-base \
          texlive-latex-extra \
          texlive-pictures
        sudo apt-get install ghostscript

    - name: Install liionpack and dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel coverage
        python -m pip install .
        pybamm_install_jax

    - name: Run tests on main on a push or on schedule
      if: (github.event_name == 'push' || github.event_name == 'schedule' && github.event_name != 'pull_request') && github.ref_name == 'main'
      run: |
        coverage run -m unittest -v

    - name: Run tests on develop on a push or on schedule
      if: (github.event_name == 'push' || github.event_name == 'schedule' && github.event_name != 'pull_request') && github.ref_name == 'develop'
      run: |
        python -m pip install git+https://github.com/pybamm-team/PyBaMM@develop --no-cache --force-reinstall
        pybamm_install_jax
        coverage run -m unittest -v

    - name: Run tests for pull requests made to main
      if: github.event_name != 'schedule' && github.event_name != 'push' && github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
      run: |
        python -m pip install pybamm>=22.6 --no-cache --force-reinstall
        coverage run -m unittest -v

    - name: Run tests for pull requests made to develop
      if: github.event_name != 'schedule' && github.event_name != 'push' && github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'develop'
      run: |
        python -m pip install git+https://github.com/pybamm-team/PyBaMM@develop --no-cache --force-reinstall
        pybamm_install_jax
        coverage run -m unittest -v

    - name: Build docs
      run: |
        python -m pip install -r docs/requirements.txt
        mkdocs build

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v1
