[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true

[tool.scriv]
categories = "Breaking, Added, Changed, Deprecated, Removed, Fixed, Security"
format = "rst"
version = "literal: src/minimal_activitypub/__init__.py: __version__"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 95
exclude = ["setup.py", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 2
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false
generate-badge = "."
badge-format = "svg"

[tool.ruff]
select = ["ARG", "B", "C4", "C90", "D", "E", "ERA", "F", "I", "PL", "RUF", "S", "UP", "W"]
ignore = ["D203", "D205", "D213"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I", "UP"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Same as Black.
line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8.
target-version = "py38"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.isort]
force-single-line = true

[tool.ruff.pycodestyle]

[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "minimal-activitypub"
description = 'Minimal inplementation of ActivityPub Interface'
readme = "README.rst"
requires-python = ">=3.8"
license = { text = "AGPL-3.0-or-later" }
keywords = []
authors = [
  { name = "marvin8", email = "marvin8@tuta.io" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development :: Libraries :: Python Modules"
]
dependencies = [
    "arrow>=1.2.3",
    "aiohttp>=3.8.4",
    "aiodns>=3.0.0",
    "Brotli>=1.0.9",
    "charset-normalizer>=3.0.1",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://marvinsmastodontools.codeberg.page/minimal-activitypub/"
Issues = "https://codeberg.org/MarvinsMastodonTools/minimal-activitypub/issues"
Source = "https://codeberg.org/MarvinsMastodonTools/minimal-activitypub"
Changelog = "https://codeberg.org/MarvinsMastodonTools/minimal-activitypub/src/branch/main/CHANGELOG.rst"

[project.optional-dependencies]
doc = [
    "Sphinx>=6.1.3",
    "python-docs-theme>=2022.1",
    "sphinx-rtd-theme>=1.2.0",
]
dev = [
    "black>=23.1.0",
    "mypy>=1.0.0",
    "bandit>=1.7.4",
    "safety>=2.3.4",
    "pip-audit>=2.4.14",
    "interrogate>=1.5.0",
    "ruff>=0.0.247",
    "flit>=3.8.0",
]

[tool.pdm]
