Metadata-Version: 2.1
Name: tsforecast
Version: 0.0.1
Summary: ML based forecasting
Home-page: https://github.com/JaumeAmoresDS/tsforecast
Author: Jaume Amores
Author-email: jaume.dsdev@gmail.com
License: Apache Software License 2.0
Keywords: nbdev jupyter notebook python
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: License :: OSI Approved :: Apache Software License
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas
Requires-Dist: numpy
Requires-Dist: tensorflow
Requires-Dist: openpyxl
Requires-Dist: pyarrow
Requires-Dist: scikit-learn
Requires-Dist: matplotlib
Provides-Extra: dev
Requires-Dist: seaborn ; extra == 'dev'
Requires-Dist: jupyterlab ; extra == 'dev'
Requires-Dist: ipython ; extra == 'dev'
Requires-Dist: ipdb ; extra == 'dev'
Requires-Dist: twine ; extra == 'dev'

Forecasting
================

<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT! -->

## Install

First, clone the repo like and cd to its root path, like so:

``` bash
git clone git@github.com:JaumeAmoresDS/forecasting.git
cd forecasting
```

Then install dependencies using one of the following options:

### Option 1: installing from forecasting.yml file

``` bash
conda env create -n forecasting --file forecasting.yml
conda activate forecasting
```

### Option 2: installing from requirements file

``` bash
conda create -n forecasting python=3.10 pip
conda activate forecasting
pip install requirements.txt
```

### Option 3: installing from setup.py

``` bash
conda create -n forecasting python=3.10  pip
conda activate forecasting
pip install -e .[dev]
```

## How to use

Run:

``` bash
python scripts/run_pipeline.py
```

This will save the predictions into a file called `predictions.parquet`.
To display it, you can do something like:

``` python
import pandas as pd

predictions = pd.read_parquet ('predictions.parquet')
predictions.plot ();
```

![](index_files/figure-commonmark/cell-2-output-1.png)
