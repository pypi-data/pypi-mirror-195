# Generated by Django 4.1.5 on 2023-02-19 20:17

from django.db import migrations, models
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                (
                    'openlibrary_id',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                (
                    'uuid',
                    models.UUIDField(
                        blank=True,
                        default=uuid.uuid4,
                        editable=False,
                        null=True,
                    ),
                ),
                (
                    'run_time',
                    models.CharField(blank=True, max_length=8, null=True),
                ),
                (
                    'run_time_ticks',
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                ('title', models.CharField(max_length=255)),
                (
                    'openlibrary_id',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'goodreads_id',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ('koreader_id', models.IntegerField(blank=True, null=True)),
                (
                    'koreader_authors',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'koreader_md5',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'isbn',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ('pages', models.IntegerField(blank=True, null=True)),
                (
                    'language',
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                (
                    'first_publish_year',
                    models.IntegerField(blank=True, null=True),
                ),
                ('authors', models.ManyToManyField(to='books.author')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
