{"version":3,"sources":["utils.tsx","main.tsx","index.tsx"],"names":["deepMap","obj","iterator","context","transform","result","val","key","isObject","call","App","_StreamlitComponentBa","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","value","JS_PLACEHOLDER","evalStringToFunction","s","match","RegExp","concat","exec","funcStr","Function","_this$props$args","this","props","args","options","series","types","width","title","cleanOptions","_jsx","className","children","_jsxs","Chart","type","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"sOAoBeA,MARf,SAASA,EAAQC,EAAUC,EAAoBC,GAC3C,OAAOC,oBAAUH,GAAK,SAAUI,EAAaC,EAAKC,GAC9CF,EAAOE,GAAOC,mBAASF,GACjBN,EAAQM,EAAKJ,EAAUC,GACvBD,EAASO,KAAKN,EAASG,EAAKC,EAAKN,EAC3C,GACJ,E,eCcaS,EAAG,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAK,YAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CA6CX,OA7CWC,YAAAR,EAAA,EAAAH,IAAA,SAAAY,MACZ,WACI,IAAMC,EAAiB,eACjBC,EAAuB,SAACC,GAC1B,IAGIC,EAHU,IAAIC,OAAO,GAADC,OACjBL,EAAc,4BAAAK,OAA2BL,IAE5BM,KAAKJ,GACzB,GAAIC,EAAO,CACP,IAAMI,EAAUJ,EAAM,GACtB,OAAO,IAAIK,SAAS,UAAYD,EAAzB,EACX,CACI,OAAOL,CAEf,EASAO,EAAyDC,KAAKC,MAAMC,KAA7DC,EAAOJ,EAAPI,QAASC,EAAML,EAANK,OAAQC,EAAKN,EAALM,MAAOC,EAAKP,EAALO,MAAOC,EAAKR,EAALQ,MAChCC,EAHKtC,EAGsCiC,EAHzBZ,EAAsB,CAAC,GAK/C,OACIkB,cAAA,OAAKC,UAAU,OAAMC,SACjBC,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBF,cAAA,MAAIC,UAAU,aAAYC,SAAEJ,IAC5BE,cAAA,OAAKC,UAAU,MAAKC,SAChBF,cAAA,OAAKC,UAAU,MAAKC,SAChBF,cAAA,OAAKC,UAAU,cAAaC,SACxBF,cAACI,IAAK,CACFV,QAASK,EACTJ,OAAQA,EACRU,KAAMT,EACNC,MAAOA,cAQvC,KAAC1B,CAAA,CA7CW,CAASmC,KAgDVC,cAAwBpC,GC5EvCqC,IAASC,OACLT,cAACU,IAAMC,WAAU,CAAAT,SACbF,cAAC7B,EAAG,MAERyC,SAASC,eAAe,Q","file":"static/js/main.20722192.chunk.js","sourcesContent":["/**\n * https://stackoverflow.com/questions/25333918/js-deep-map-function\n */\nimport { isObject, transform } from \"lodash\"\n\n/**\n * Run function through every nested value of an object\n * @param obj object\n * @param iterator in our case, very certainly evaluate string to function\n * @param context initial value\n * @returns object with all value passed through function\n */\nfunction deepMap(obj: any, iterator: Function, context: any) {\n    return transform(obj, function (result: any, val, key) {\n        result[key] = isObject(val)\n            ? deepMap(val, iterator, context)\n            : iterator.call(context, val, key, obj)\n    })\n}\n\nexport default deepMap","import React from \"react\"\nimport Chart from \"react-apexcharts\";\nimport deepMap from \"./utils\"\n\nimport {\n    StreamlitComponentBase,\n    withStreamlitConnection\n} from \"streamlit-component-lib\";\n\ninterface ApexArgs {\n    options: any;\n    series: any[];\n    types?: \"line\"\n        | \"area\"\n        | \"bar\"\n        | \"histogram\"\n        | \"pie\"\n        | \"donut\"\n        | \"radialBar\"\n        | \"scatter\"\n        | \"bubble\"\n        | \"heatmap\"\n        | \"treemap\"\n        | \"boxPlot\"\n        | \"candlestick\"\n        | \"radar\"\n        | \"polarArea\"\n        | \"rangeBar\";\n    width?: string | number,\n    title: string\n}\n\nexport class App extends StreamlitComponentBase {\n    render() {\n        const JS_PLACEHOLDER = \"--x_x--0_0--\"\n        const evalStringToFunction = (s: string) => {\n            let funcReg = new RegExp(\n                `${JS_PLACEHOLDER}\\\\s*(function\\\\s*.*)\\\\s*${JS_PLACEHOLDER}`\n            )\n            let match = funcReg.exec(s)\n            if (match) {\n                const funcStr = match[1]\n                return new Function(\"return \" + funcStr)()\n            } else {\n                return s\n            }\n        }\n        /**\n         * Deep map all values in an object to evaluate all strings as functions\n         * @param obj object to deep map on\n         * @returns object with all functions in values evaluated\n         */\n        const evalStringToFunctionDeepMap = (obj: object) => {\n            return deepMap(obj, evalStringToFunction, {})\n        }\n        const {options, series, types, width, title}: ApexArgs = this.props.args\n        const cleanOptions = evalStringToFunctionDeepMap(options)\n\n        return (\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">{title}</h5>\n                    <div className=\"app\">\n                        <div className=\"row\">\n                            <div className=\"mixed-chart\">\n                                <Chart\n                                    options={cleanOptions}\n                                    series={series}\n                                    type={types}\n                                    width={width}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStreamlitConnection(App);","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./main\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}