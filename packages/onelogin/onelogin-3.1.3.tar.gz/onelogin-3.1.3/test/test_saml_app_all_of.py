# coding: utf-8

"""
    OneLogin API

    OpenAPI Specification for OneLogin  # noqa: E501

    The version of the OpenAPI document: 3.1.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import onelogin
from onelogin.models.saml_app_all_of import SamlAppAllOf  # noqa: E501
from onelogin.rest import ApiException

class TestSamlAppAllOf(unittest.TestCase):
    """SamlAppAllOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SamlAppAllOf
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SamlAppAllOf`
        """
        model = onelogin.models.saml_app_all_of.SamlAppAllOf()  # noqa: E501
        if include_optional :
            return SamlAppAllOf(
                configuration = None, 
                sso = None, 
                parameters = onelogin.models.saml_app_all_of_parameters.saml_app_allOf_parameters(
                    saml_username = onelogin.models.saml_app_all_of_parameters_saml_username.saml_app_allOf_parameters_saml_username(
                        user_attribute_mappings = '', ), )
            )
        else :
            return SamlAppAllOf(
                configuration = None,
                parameters = onelogin.models.saml_app_all_of_parameters.saml_app_allOf_parameters(
                    saml_username = onelogin.models.saml_app_all_of_parameters_saml_username.saml_app_allOf_parameters_saml_username(
                        user_attribute_mappings = '', ), ),
        )
        """

    def testSamlAppAllOf(self):
        """Test SamlAppAllOf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
