var g=Object.defineProperty;var y=(t,e,s)=>e in t?g(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var o=(t,e,s)=>(y(t,typeof e!="symbol"?e+"":e,s),s),H=(t,e,s)=>{if(!e.has(t))throw TypeError("Cannot "+s)};var i=(t,e,s)=>(H(t,e,"read from private field"),s?s.call(t):e.get(t)),c=(t,e,s)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,s)};import{y as M,l as w,i as v,z as S,k as f}from"./index.490d1368.js";function C(t,e=0){let s=3735928559^e,n=1103547991^e;for(let u=0,h;u<t.length;u++)h=t.charCodeAt(u),s=Math.imul(s^h,2654435761),n=Math.imul(n^h,1597334677);return s=Math.imul(s^s>>>16,2246822507)^Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507)^Math.imul(s^s>>>13,3266489909),4294967296*(2097151&n)+(s>>>0)}let T=0;function b(){return++T}const j=1500,p=new Map;var a,r,l;class A{constructor(){c(this,a,v([]));o(this,"steps",S(i(this,a)));o(this,"serverHash",v(null));o(this,"clientHash",f(()=>d(i(this,a).value)));o(this,"isModified",f(()=>this.serverHash.value!==this.clientHash.value));c(this,r,[]);c(this,l,[]);o(this,"canUndo",f(()=>(i(this,a).value,i(this,r).length>0)));o(this,"canRedo",f(()=>(i(this,a).value,i(this,l).length>0)))}restore(e){e!==this.steps.value&&(i(this,r).splice(0,i(this,r).length),i(this,l).splice(0,i(this,l).length),i(this,a).value=e)}update(e){i(this,l).splice(0,i(this,l).length),i(this,r).push(i(this,a).value),i(this,a).value=e}undo(){i(this,l).push(i(this,a).value),i(this,a).value=i(this,r).pop()}redo(){i(this,r).push(i(this,a).value),i(this,a).value=i(this,l).pop()}}a=new WeakMap,r=new WeakMap,l=new WeakMap;async function F(t){return await(await fetch(`/api/datasets/${encodeURIComponent(t.name)}/configuration.json`)).json()}function d(t){return C(JSON.stringify(t))}function R(t){if(!p.has(t.name)){const e=M({version:null,files:[],filters:new A});p.set(t.name,e),F(t).then(s=>{e.version=s.version,e.files.splice(0,e.files.length,...s.files),e.filters.restore(s.filters.map(n=>({...n,id:b()}))),e.filters.serverHash.value=e.filters.clientHash.value,w(e.filters.clientHash,(n,u,h)=>{if(n===e.filters.serverHash.value)return;const m=setTimeout(async()=>{console.assert(e.filters.isModified.value,"filtersteps configuration is marked as not-modified"),console.assert(e.filters.clientHash.value===n,"hash changed after watch() but onCleanup was not called"),console.assert(n===d(e.filters.steps.value),"newHash does not match the hash for the current filtersteps configuration"),(await fetch(`/api/datasets/${encodeURIComponent(t.name)}/configuration.json`,{method:"PATCH",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({filters:e.filters.steps.value},null,2)})).ok&&(e.filters.serverHash.value=n)},j);h(()=>clearTimeout(m))})})}return p.get(t.name)}function k(t){return R(t).filters}export{R as a,b,k as g};
