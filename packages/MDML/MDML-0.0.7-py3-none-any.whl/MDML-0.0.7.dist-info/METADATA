Metadata-Version: 2.1
Name: MDML
Version: 0.0.7
Summary: Application of Deep learning on molecular dymanamics trajectories
Home-page: https://github.com/StevetheGreek97/MD_ML.git
Author: Stylianos Mavrianos
Author-email: stylianosmavrianos@gmail.com
Classifier: Programming Language :: Python
Classifier: Development Status :: 1 - Planning
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Education
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: absl-py (==1.3.0)
Requires-Dist: anyio (==3.6.2)
Requires-Dist: argon2-cffi (==21.3.0)
Requires-Dist: argon2-cffi-bindings (==21.2.0)
Requires-Dist: asttokens (==2.1.0)
Requires-Dist: astunparse (==1.6.3)
Requires-Dist: attrs (==22.1.0)
Requires-Dist: Babel (==2.11.0)
Requires-Dist: backcall (==0.2.0)
Requires-Dist: beautifulsoup4 (==4.11.1)
Requires-Dist: biopython (==1.79)
Requires-Dist: bleach (==5.0.1)
Requires-Dist: cachetools (==5.2.0)
Requires-Dist: certifi (==2022.9.24)
Requires-Dist: cffi (==1.15.1)
Requires-Dist: charset-normalizer (==2.1.1)
Requires-Dist: click (==8.1.3)
Requires-Dist: cloudpickle (==2.2.0)
Requires-Dist: contourpy (==1.0.6)
Requires-Dist: cycler (==0.11.0)
Requires-Dist: dask (==2022.12.1)
Requires-Dist: debugpy (==1.6.3)
Requires-Dist: decorator (==5.1.1)
Requires-Dist: defusedxml (==0.7.1)
Requires-Dist: Deprecated (==1.2.13)
Requires-Dist: distributed (==2022.12.1)
Requires-Dist: entrypoints (==0.4)
Requires-Dist: executing (==1.2.0)
Requires-Dist: fasteners (==0.18)
Requires-Dist: fastjsonschema (==2.16.2)
Requires-Dist: flatbuffers (==22.10.26)
Requires-Dist: fonttools (==4.38.0)
Requires-Dist: fsspec (==2022.11.0)
Requires-Dist: gast (==0.4.0)
Requires-Dist: google-auth (==2.14.1)
Requires-Dist: google-auth-oauthlib (==0.4.6)
Requires-Dist: google-pasta (==0.2.0)
Requires-Dist: graphviz (==0.20.1)
Requires-Dist: GridDataFormats (==1.0.1)
Requires-Dist: grpcio (==1.50.0)
Requires-Dist: gsd (==2.6.1)
Requires-Dist: h5py (==3.7.0)
Requires-Dist: HeapDict (==1.0.1)
Requires-Dist: idna (==3.4)
Requires-Dist: imageio (>=1.6)
Requires-Dist: importlib-metadata (==5.0.0)
Requires-Dist: importlib-resources (==5.10.0)
Requires-Dist: ipykernel (==6.17.0)
Requires-Dist: ipython (==8.6.0)
Requires-Dist: ipython-genutils (==0.2.0)
Requires-Dist: ipywidgets (==7.6.5)
Requires-Dist: jedi (==0.18.1)
Requires-Dist: Jinja2 (==3.1.2)
Requires-Dist: joblib (==1.2.0)
Requires-Dist: json5 (==0.9.10)
Requires-Dist: jsonschema (==4.17.0)
Requires-Dist: jupyter (==1.0.0)
Requires-Dist: jupyter-console (==6.4.4)
Requires-Dist: jupyter-server (==1.23.0)
Requires-Dist: jupyter-client (==7.4.4)
Requires-Dist: jupyter-core (==4.11.2)
Requires-Dist: jupyterlab (==3.5.0)
Requires-Dist: jupyterlab-pygments (==0.2.2)
Requires-Dist: jupyterlab-widgets (==3.0.3)
Requires-Dist: jupyterlab-server (==2.16.3)
Requires-Dist: kaleido (==0.2.1)
Requires-Dist: keras (==2.10.0)
Requires-Dist: Keras-Preprocessing (==1.1.2)
Requires-Dist: kiwisolver (==1.4.4)
Requires-Dist: libclang (==14.0.6)
Requires-Dist: lime (==0.2.0.1)
Requires-Dist: locket (==1.0.0)
Requires-Dist: Markdown (==3.4.1)
Requires-Dist: MarkupSafe (==2.1.1)
Requires-Dist: matplotlib (==3.6.2)
Requires-Dist: matplotlib-inline (==0.1.6)
Requires-Dist: MDAnalysis (==2.3.0)
Requires-Dist: mistune (==2.0.4)
Requires-Dist: mmtf-python (==1.1.3)
Requires-Dist: moviepy (==0.2.2.11)
Requires-Dist: mrcfile (==1.4.3)
Requires-Dist: msgpack (==1.0.4)
Requires-Dist: nbclassic (==0.4.8)
Requires-Dist: nbclient (==0.7.0)
Requires-Dist: nbconvert (==7.2.3)
Requires-Dist: nbformat (==5.7.0)
Requires-Dist: nest-asyncio (==1.5.6)
Requires-Dist: networkx (==2.8.8)
Requires-Dist: nglview (==3.0.3)
Requires-Dist: notebook (==6.5.2)
Requires-Dist: notebook-shim (==0.2.2)
Requires-Dist: numpy (==1.23.4)
Requires-Dist: oauthlib (==3.2.2)
Requires-Dist: opencv-python (==4.6.0.66)
Requires-Dist: opt-einsum (==3.3.0)
Requires-Dist: packaging (==21.3)
Requires-Dist: pandas (==1.5.1)
Requires-Dist: pandocfilters (==1.5.0)
Requires-Dist: parso (==0.8.3)
Requires-Dist: partd (==1.3.0)
Requires-Dist: pexpect (==4.8.0)
Requires-Dist: pickleshare (==0.7.5)
Requires-Dist: Pillow (==9.3.0)
Requires-Dist: pkgutil-resolve-name (==1.3.10)
Requires-Dist: plotly (==5.11.0)
Requires-Dist: prometheus-client (==0.15.0)
Requires-Dist: prompt-toolkit (==3.0.32)
Requires-Dist: protobuf (==3.19.6)
Requires-Dist: psutil (==5.9.4)
Requires-Dist: ptyprocess (==0.7.0)
Requires-Dist: pure-eval (==0.2.2)
Requires-Dist: pyasn1 (==0.4.8)
Requires-Dist: pyasn1-modules (==0.2.8)
Requires-Dist: pycparser (==2.21)
Requires-Dist: Pygments (==2.13.0)
Requires-Dist: pyparsing (==3.0.9)
Requires-Dist: pyrsistent (==0.19.2)
Requires-Dist: python-dateutil (==2.8.2)
Requires-Dist: pytz (==2022.6)
Requires-Dist: PyWavelets (==1.4.1)
Requires-Dist: PyYAML (==6.0)
Requires-Dist: pyzmq (==24.0.1)
Requires-Dist: qtconsole (==5.4.0)
Requires-Dist: QtPy (==2.3.0)
Requires-Dist: regex (==2022.10.31)
Requires-Dist: requests (==2.28.1)
Requires-Dist: requests-oauthlib (==1.3.1)
Requires-Dist: rsa (==4.9)
Requires-Dist: scikit-image (==0.19.3)
Requires-Dist: scikit-learn (==1.1.3)
Requires-Dist: scipy (==1.9.3)
Requires-Dist: Send2Trash (==1.8.0)
Requires-Dist: six (==1.16.0)
Requires-Dist: sklearn (==0.0.post1)
Requires-Dist: sniffio (==1.3.0)
Requires-Dist: sortedcontainers (==2.4.0)
Requires-Dist: soupsieve (==2.3.2.post1)
Requires-Dist: stack-data (==0.6.0)
Requires-Dist: tblib (==1.7.0)
Requires-Dist: tenacity (==8.1.0)
Requires-Dist: tensorboard (==2.10.1)
Requires-Dist: tensorboard-data-server (==0.6.1)
Requires-Dist: tensorboard-plugin-wit (==1.8.1)
Requires-Dist: tensorflow (==2.10.0)
Requires-Dist: tensorflow-estimator (==2.10.0)
Requires-Dist: tensorflow-io-gcs-filesystem (==0.27.0)
Requires-Dist: termcolor (==2.1.0)
Requires-Dist: terminado (==0.17.0)
Requires-Dist: threadpoolctl (==3.1.0)
Requires-Dist: tifffile (==2022.10.10)
Requires-Dist: tinycss2 (==1.2.1)
Requires-Dist: tomli (==2.0.1)
Requires-Dist: toolz (==0.12.0)
Requires-Dist: tornado (==6.2)
Requires-Dist: tqdm (==4.64.1)
Requires-Dist: traitlets (==5.5.0)
Requires-Dist: typing-extensions (==4.4.0)
Requires-Dist: urllib3 (==1.26.12)
Requires-Dist: wcwidth (==0.2.5)
Requires-Dist: webencodings (==0.5.1)
Requires-Dist: websocket-client (==1.4.2)
Requires-Dist: Werkzeug (==2.2.2)
Requires-Dist: widgetsnbextension (==3.5.2)
Requires-Dist: wrapt (==1.14.1)
Requires-Dist: yml (==0.0.1)
Requires-Dist: zict (==2.2.0)
Requires-Dist: zipp (==3.10.0)

# Molecular Dynamics & Machine Learning (MDML)

This repository is for the graduation projrct for the Master in Data Science 
for Life Sciences at Hanze University of Applied Sciences.

Proteins play a vital role in many biological processes and are essential to the structure and function of cells. Dysfunctional proteins can lead to disease and studying them can aid in understanding the underlying cause of the disease and potentially developing treatments and medication. In this study, a custom Convolutional Neural Network (CNN) was used to analyze the active and inactive states of the EGFR protein, a key player in cancer. The CNN was able to identify key residues that define the active and inactive state of the protein, specifically the DFG-Asp motif, with 100% accuracy. Our methodology for image transformation represented the 3D coordinates of atoms in a protein as 2D images, which differs from existing methods in literature. The results of this study demonstrate the potential of using deep learning methods on MD simulation trajectories, but also highlight the need for careful evaluation of the used methods and their utility in order to ensure meaningful insights.

Student:          Stylianos Mavrianos, s.mavrianos@st.hanze.nl <br>
Supervisor:       Tsjerk Wassenaar,  t.a.wassenaar@pl.hanze.nl <br>
Daily supervisor: Vilacha Madeira R Santos, j.f.vilacha@rug.nl <br>

## Research questions
1. Assess whether a Convolutional Neural Networks (CNN) classification approach is useful and relevant in the field of MD.
2. Is it possible to predict long term simulations from sort term ones? 
3. How short is short enough? 

## Requirements

- Python 3.8.10
- Numpy
- MatplotLib
- PLotly
- Scikit-learn
- Tensorflow
- Keras
- MDAnalysis
- cv2
- yaml

## Setup

1. Clone the repository to your local machine:

```git clone https://github.com/StevetheGreek97/MD_ML.git```

2. Create a new environment:

``` virtualenv MD_ML```

3. Install the required packages:

```pip install -r requirments.txt```

4. Example tutorials for each module are in the Examples folder. There are all jupyter notebooks. 

## Usage

The pipeline consists of three modules: Preprocessing.py, Machinelearning.py and Mapping.py.

 To get started, simply configure a yaml configuration file (conf.yml) that includes:
1. the 'masterpath' to a folder containing subfolders for each classification state (e.g., active, inactive state) -> str

Each subfolder should contain a .pdb and .xtc file for the corresponding state.

```
< EGFR >
    |
    |--data 
    |    |  
    |    |
    |    |--active
    |    |     |
         |     |--topology file (.pdb)
         |     |
         |     |--coordinates file (.xtc)
         |
         |--inactive
               |
               |--topology file (.pdb)
               |
               |--coordinates file (.xtc)
```

2. a 'savingpath' that all the results with be saved. -> str

3. 'downsampled_to' how many image should be created for each state -> int

```
downsample_to: 1659
masterpath: /path/to/data/
savepath: /path/to/save

```
The final output includes a series of down-sampled images, a prefomance img, a confusion matrix, a saliency map, a .txt file listing important residues, and a .pdb file with b-factor information showing the important residues. 
```
< output >
    |
    |-- imgs 
    |     |
    |     |-- active
    |     |     |
    |     |     |-- active_X.jpg    # The down-sampled active trajectory transcribed in RGB values
    |     |
    |     |-- inactive
    |     |     |
    |           |-- inactive_X.jpg  # The down-sampled inactive trajectory transcribed in RGB values
    |     
    |-- models
    |     |
    |     |-- model.h5               # The trained model 
    |
    |-- performance
    |     |
    |     |-- peformancne.jpg        # An image of the model's performance (locc, accuracy)
    |     |-- confusion_matrix.jpg   # An image of the confusion matrix of the model 
    |
    |-- results
    |     |
    |     |-- inactive.txt           # The important residues for the inactive state
    |     |-- inactive.pdb           #  b-factor information showing the important residues for the inactive state
    |     |-- sal_map_inactive.jpg   # The saliency map of the inactive state
          |-- active.txt             # The important residues for the active state
          |-- active.pdb             #  b-factor information showing the important residues for the active state
          |-- sal_map_active.jpg     # The saliency map of the active state
          |   
    
```
In order to run the pipeline simply run this code:
```
python3 main.py -c path/to/confg.yml
```
Alternatevly you can run the three modules separately. They also serve as checkpoints.
