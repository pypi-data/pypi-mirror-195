[tool.poetry]
name = "gravitorch"
version = "0.0.8a7"
description = "Warning: API is not stable"
readme = "README.md"
authors = ["Thibaut Durand <durand.tibo+gh@gmail.com>"]
#homepage = "https://github.com/durandtibo/gravitorch"
#repository = "https://github.com/durandtibo/gravitorch"
keywords = ["gravitorch"]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

packages = [
    { include = "gravitorch", from = "src" },
]

[tool.poetry.dependencies]
# Core dependencies
coola = "^0.0"
hya = "^0.0"
hydra-core = "^1.3"
numpy = "^1.24"
objectory = "^0.0"
psutil = "^5.9"
python = "^3.9"
pytorch-ignite = "^0.4"
tabulate = "^0.9"
torch = "^1.13"
tqdm = "^4.64"

# Optional dependencies
accelerate = { version = "^0.15", optional = true }
colorlog = { version = "^6.7", optional = true }
matplotlib = { version = "^3.6", optional = true }
pillow = { version = "^9.3", optional = true }
tensorboard = { version = "^2.11", optional = true }
torchvision = { version = "^0.14", optional = true }

[tool.poetry.extras]
all = [
    "accelerate",
    "colorlog",
    "matplotlib",
    "pillow",
    "tensorboard",
    "torch-tb-profiler",
    "torchvision",
]
tb = ["tensorboard", "torch-tb-profiler"]
vision = ["pillow", "torchvision"]

[tool.poetry.group.exp]
optional = true

[tool.poetry.group.exp.dependencies]
jupyterlab = "^3.5"
torch-tb-profiler = "^0.4"

[tool.poetry.group.dev.dependencies]
black = "^22.10"
codecov = "^2.1"
coverage = { extras = ["toml"], version = "^6.5" }
flake8 = "^6.0"
flake8-bugbear = "^22.12"
isort = "^5.10"
pre-commit = "^2.20"
pylint = "^2.15"
pytest = "^7.2"
pytest-cov = "^4.0"
pytest-timeout = "^2.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["gravitorch"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]

[tool.pytest.ini_options]
testpaths = "tests/"
log_format = "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
log_level = "DEBUG"
addopts = "--color yes --durations 10 -rf"
# Configuration of the short test summary info https://docs.pytest.org/en/stable/usage.html#detailed-summary-report
filterwarnings = [
    'ignore::DeprecationWarning:tensorboard.*',
    'ignore::DeprecationWarning:torch.utils.tensorboard.*',
]

[tool.black]
line-length = 100
target-version = ["py39", "py310"]
include = '\.pyi?$'

[tool.pylint.FORMAT]
max-line-length = 100

[tool.isort]
profile = "black"

[tool.docformatter]
recursive = true
wrap-summaries = 72
wrap-descriptions = 72
syntax = "google"
