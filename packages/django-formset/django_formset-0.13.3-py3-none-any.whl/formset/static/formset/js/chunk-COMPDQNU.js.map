{
  "version": 3,
  "sources": ["../../../../client/django-formset/IncompleteSelect.ts"],
  "sourcesContent": ["\nexport abstract class IncompleteSelect {\n\tprivate readonly endpoint?: string;\n\tprivate readonly fieldName?: string;\n\tprotected isIncomplete: boolean;\n\tprotected readonly fieldGroup: Element;\n\tprotected filterByValues = new Map<string, string | string[]>();\n\n\tconstructor(element: HTMLSelectElement) {\n\t\tconst fieldGroup = element.closest('django-field-group');\n\t\tconst form = element.form;\n\t\tconst formset = element.closest('django-formset');\n\t\tif (!fieldGroup || !form || !formset)\n\t\t\tthrow new Error(\"Attempt to initialize <django-selectize> outside <django-formset>\");\n\t\tthis.fieldGroup = fieldGroup;\n\t\tthis.isIncomplete = element.hasAttribute('incomplete');\n\t\tif (this.isIncomplete) {\n\t\t\t// select fields marked as \"uncomplete\" will fetch additional data from their backend\n\t\t\tconst formName = form.getAttribute('name') ?? '__default__';\n\t\t\tthis.endpoint = formset.getAttribute('endpoint') ?? '';\n\t\t\tthis.fieldName = `${formName}.${element.getAttribute('name')}`;\n\t\t}\n\t\tform.addEventListener('reset', event => this.formResetted(event));\n\t\tform.addEventListener('submitted', event => this.formSubmitted(event));\n\t}\n\n\tprotected setupFilters(element: HTMLSelectElement) {\n\t\tconst filters = element.getAttribute('filter-by')?.split(',') ?? [];\n\t\tfilters.forEach(filterBy => {\n\t\t\tconst observedElement = element.form?.elements.namedItem(filterBy);\n\t\t\tif (observedElement instanceof HTMLInputElement) {\n\t\t\t\tthis.filterByValues.set(filterBy, observedElement.value);\n\t\t\t\tobservedElement.addEventListener('change', (event: Event) => {\n\t\t\t\t\tconst changedElement = event.currentTarget;\n\t\t\t\t\tif (changedElement instanceof HTMLInputElement) {\n\t\t\t\t\t\tthis.filterByValues.set(filterBy, changedElement.value);\n\t\t\t\t\t\tthis.reloadOptions();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (observedElement instanceof HTMLSelectElement) {\n\t\t\t\tthis.filterByValues.set(filterBy, Array.from(observedElement.selectedOptions).map(o => o.value));\n\t\t\t\tobservedElement.addEventListener('change', (event: Event) => {\n\t\t\t\t\tconst changedElement = event.currentTarget;\n\t\t\t\t\tif (changedElement instanceof HTMLSelectElement) {\n\t\t\t\t\t\tthis.filterByValues.set(filterBy, Array.from(observedElement.selectedOptions).map(o => o.value));\n\t\t\t\t\t\tthis.reloadOptions();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (Array.from(this.filterByValues.values()).some(val => (val as Array<string>).some(s => s))) {\n\t\t\t\tthis.reloadOptions();\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected abstract formResetted(event: Event) : void;\n\n\tprotected abstract formSubmitted(event: Event) : void;\n\n\tprotected abstract reloadOptions() : void;\n\n\tprotected touch = () => {\n\t\tthis.fieldGroup.classList.remove('dj-untouched', 'dj-validated');\n\t\tthis.fieldGroup.classList.add('dj-touched');\n\t}\n\n\tprotected buildFetchQuery(offset: number, searchStr?: string) : URLSearchParams {\n\t\tconst query = new URLSearchParams();\n\t\tquery.set('offset', String(offset));\n\t\tif (searchStr) {\n\t\t\tquery.set('search', encodeURIComponent(searchStr));\n\t\t}\n\t\tfor (const [key, value] of this.filterByValues) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tquery.set(`filter-${key}`, encodeURIComponent(value));\n\t\t\t} else {\n\t\t\t\tvalue.forEach(val => query.append(`filter-${key}`, encodeURIComponent(val)));\n\t\t\t}\n\t\t}\n\t\treturn query;\n\t}\n\n\tprotected async loadOptions(query: URLSearchParams, successCallback: Function) {\n\t\tconst headers = new Headers();\n\t\theaders.append('Accept', 'application/json');\n\t\tquery.set('field', this.fieldName!);\n\t\tconst response = await fetch(`${this.endpoint}?${query.toString()}`, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: headers,\n\t\t});\n\t\tif (response.status === 200) {\n\t\t\tconst data = await response.json();\n\t\t\tif (typeof data.incomplete === 'boolean') {\n\t\t\t\tthis.isIncomplete = data.incomplete;\n\t\t\t}\n\t\t\tsuccessCallback(data.options);\n\t\t} else {\n\t\t\tconsole.error(`Failed to fetch from ${this.endpoint} (status=${response.status})`);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["IncompleteSelect", "element", "fieldGroup", "form", "formset", "formName", "event", "_a", "filterBy", "observedElement", "changedElement", "o", "val", "s", "offset", "searchStr", "query", "key", "value", "successCallback", "headers", "response", "data"]
}
