{
  "version": 3,
  "sources": ["../../../../client/django-formset/helpers.ts"],
  "sourcesContent": ["export namespace StyleHelpers {\n\texport function extractStyles(element: Element, properties: Array<string>): string {\n\t\tlet styles = Array<string>();\n\t\tconst style = window.getComputedStyle(element);\n\t\tfor (let property of properties) {\n\t\t\tstyles.push(`${property}:${style.getPropertyValue(property)}`);\n\t\t}\n\t\treturn styles.join('; ').concat('; ');\n\t}\n\n\texport function convertPseudoClasses() : HTMLStyleElement {\n\t\t// Iterate over all style sheets, find most pseudo classes and add CSSRules with a\n\t\t// CSS selector where the pseudo class has been replaced by a real counterpart.\n\t\t// This is required, because browsers can not invoke `window.getComputedStyle(element)`\n\t\t// using pseudo classes.\n\t\t// With function `removeConvertedClasses()` the added CSSRules are removed again.\n\t\tconst numStyleSheets = document.styleSheets.length;\n\t\tconst styleElement = document.createElement('style');\n\t\tdocument.head.appendChild(styleElement);\n\t\tfor (let index = 0; index < numStyleSheets; index++) {\n\t\t\tconst sheet = document.styleSheets[index];\n\t\t\tfor (let k = 0; k < sheet.cssRules.length; k++) {\n\t\t\t\tconst cssRule = sheet.cssRules.item(k);\n\t\t\t\tif (cssRule) {\n\t\t\t\t\ttraverseStyles(cssRule, styleElement.sheet as CSSStyleSheet);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn styleElement;\n\t}\n\n\tfunction traverseStyles(cssRule: CSSRule, extraCSSStyleSheet: CSSStyleSheet) {\n\t\tif (cssRule instanceof CSSImportRule) {\n\t\t\tif (!cssRule.styleSheet)\n\t\t\t\treturn;\n\t\t\tfor (let subRule of cssRule.styleSheet.cssRules) {\n\t\t\t\ttraverseStyles(subRule, extraCSSStyleSheet);\n\t\t\t}\n\t\t} else if (cssRule instanceof CSSStyleRule) {\n\t\t\tif (!cssRule.selectorText)\n\t\t\t\treturn;\n\t\t\tconst newSelectorText = cssRule.selectorText.\n\t\t\t\treplaceAll(':focus', '.-focus-').\n\t\t\t\treplaceAll(':focus-visible', '.-focus-visible-').\n\t\t\t\treplaceAll(':hover', '.-hover-').\n\t\t\t\treplaceAll(':disabled', '.-disabled-').\n\t\t\t\treplaceAll(':invalid', '.-invalid-').\n\t\t\t\treplaceAll(':valid', '.-valid-').\n\t\t\t\treplaceAll('::placeholder-shown', '.-placeholder-shown').\n\t\t\t\treplaceAll(':placeholder-shown', '.-placeholder-shown').\n\t\t\t\treplaceAll('::placeholder', '.-placeholder-').\n\t\t\t\treplaceAll(':placeholder', '.-placeholder-');\n\t\t\tif (newSelectorText !== cssRule.selectorText) {\n\t\t\t\textraCSSStyleSheet.insertRule(`${newSelectorText}{${cssRule.style.cssText}}`);\n\t\t\t}\n\t\t} // else handle other CSSRule types\n\t}\n}\n"],
  "mappings": "AAAO,IAAUA,MAAV,CACC,SAASC,EAAcC,EAAkBC,EAAmC,CAClF,IAAIC,EAAS,MAAc,EACrBC,EAAQ,OAAO,iBAAiBH,CAAO,EAC7C,QAASI,KAAYH,EACpBC,EAAO,KAAK,GAAGE,KAAYD,EAAM,iBAAiBC,CAAQ,GAAG,EAE9D,OAAOF,EAAO,KAAK,IAAI,EAAE,OAAO,IAAI,CACrC,CAPOJ,EAAS,cAAAC,EAST,SAASM,GAA0C,CAMzD,IAAMC,EAAiB,SAAS,YAAY,OACtCC,EAAe,SAAS,cAAc,OAAO,EACnD,SAAS,KAAK,YAAYA,CAAY,EACtC,QAASC,EAAQ,EAAGA,EAAQF,EAAgBE,IAAS,CACpD,IAAMC,EAAQ,SAAS,YAAYD,GACnC,QAASE,EAAI,EAAGA,EAAID,EAAM,SAAS,OAAQC,IAAK,CAC/C,IAAMC,EAAUF,EAAM,SAAS,KAAKC,CAAC,EACjCC,GACHC,EAAeD,EAASJ,EAAa,KAAsB,CAE7D,CACD,CACA,OAAOA,CACR,CAnBOT,EAAS,qBAAAO,EAqBhB,SAASO,EAAeD,EAAkBE,EAAmC,CAC5E,GAAIF,aAAmB,cAAe,CACrC,GAAI,CAACA,EAAQ,WACZ,OACD,QAASG,KAAWH,EAAQ,WAAW,SACtCC,EAAeE,EAASD,CAAkB,CAE5C,SAAWF,aAAmB,aAAc,CAC3C,GAAI,CAACA,EAAQ,aACZ,OACD,IAAMI,EAAkBJ,EAAQ,aAC/B,WAAW,SAAU,UAAU,EAC/B,WAAW,iBAAkB,kBAAkB,EAC/C,WAAW,SAAU,UAAU,EAC/B,WAAW,YAAa,aAAa,EACrC,WAAW,WAAY,YAAY,EACnC,WAAW,SAAU,UAAU,EAC/B,WAAW,sBAAuB,qBAAqB,EACvD,WAAW,qBAAsB,qBAAqB,EACtD,WAAW,gBAAiB,gBAAgB,EAC5C,WAAW,eAAgB,gBAAgB,EACxCI,IAAoBJ,EAAQ,cAC/BE,EAAmB,WAAW,GAAGE,KAAmBJ,EAAQ,MAAM,UAAU,CAE9E,CACD,IAxDgBb,MAAA",
  "names": ["StyleHelpers", "extractStyles", "element", "properties", "styles", "style", "property", "convertPseudoClasses", "numStyleSheets", "styleElement", "index", "sheet", "k", "cssRule", "traverseStyles", "extraCSSStyleSheet", "subRule", "newSelectorText"]
}
