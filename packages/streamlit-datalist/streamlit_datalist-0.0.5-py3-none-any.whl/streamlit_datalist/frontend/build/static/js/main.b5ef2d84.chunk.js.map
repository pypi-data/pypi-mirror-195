{"version":3,"sources":["streamlit_datalist.tsx","index.tsx"],"names":["StreamlitDatalist","state","selection","isFocused","value","render","props","args","options","label","def_val","i","options_html","option","push","id","key","theme","styleLabel","styleInput","width","fontSize","lineHeight","transform","fontFamily","font","marginBottom","height","minHeight","verticalAlign","backgroundColor","secondaryBackgroundColor","color","textColor","padding","borderRadius","border","borderColor","textIndent","fontWeight","primaryColor","outline","style","list","name","defaultValue","onChange","_updateInputValue","onFocus","_onFocus","onBlur","_onBlur","className","setState","event","target","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"oPAOMA,EAAiB,iKA+EpB,OA/EoB,oCACdC,MAAQ,CAAEC,UAAW,KAAMC,WAAW,EAAQC,MAAO,IAAG,EAExDC,OAAS,WACd,IAI0B,EAJ1B,EAAoC,EAAKC,MAAMC,KAAvCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAEpBC,EAAI,EACFC,EAAe,GAAE,cACJJ,GAAO,IAA1B,2BAA2B,CAAC,IAAnBK,EAAM,QACbD,EAAaE,KAAK,4BAAQV,MAAOS,EAAQE,GAAIF,EAAQG,IAAKL,KAC1DA,GAAG,GACJ,8BAED,IAAQM,EAAU,EAAKX,MAAfW,MACFC,EAAkC,GAClCC,EAAkC,GA6BxC,OA3BAD,EAAWE,MAAQ,OACnBF,EAAWG,SAAW,OACtBH,EAAWI,WAAa,MACxBJ,EAAWK,UAAY,gBACvBL,EAAWM,WAAkB,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOQ,KAC/BP,EAAWQ,aAAe,SAC1BR,EAAWS,OAAS,OACpBT,EAAWU,UAAY,SACvBV,EAAWW,cAAgB,SAE3BV,EAAWC,MAAQ,OACnBD,EAAWW,gBAAuB,OAALb,QAAK,IAALA,OAAK,EAALA,EAAOc,yBACpCZ,EAAWa,MAAa,OAALf,QAAK,IAALA,OAAK,EAALA,EAAOgB,UAC1Bd,EAAWe,QAAU,MACrBf,EAAWG,WAAa,MACxBH,EAAWgB,aAAe,UAC1BhB,EAAWE,SAAW,OACtBF,EAAWiB,OAAS,YACpBjB,EAAWkB,YAAc,eACzBlB,EAAWmB,WAAa,MACxBnB,EAAWoB,WAAa,SAEpB,EAAKtC,MAAME,YACbgB,EAAWkB,YAAmB,OAALpB,QAAK,IAALA,OAAK,EAALA,EAAOuB,aAChCrB,EAAWsB,QAAU,OAIrB,8BACE,2BAAOC,MAASxB,GAAW,IAAGT,EAAK,IAAE,6BAAK,KAC1C,2BAAOiC,MAASvB,EACVwB,KAAK,oBACLC,KAAK,WACL7B,GAAG,WACH8B,aAAgBnC,EAChBoC,SAAY,EAAKC,kBACjBC,QAAS,EAAKC,SACdC,OAAQ,EAAKC,QACbnC,IAAON,IAGb,8BAAUK,GAAG,oBAAoBqC,UAAU,UACxCxC,KAIR,EAUOqC,SAAW,WACjB,EAAKI,SAAS,CAAElD,WAAW,KAC5B,EAEOgD,QAAU,WAChB,EAAKE,SAAS,CAAElD,WAAW,KAC5B,EARA,OAQA,8CAdD,SAA0BmD,GACC,KAArBA,EAAMC,OAAOnD,MACfoD,IAAUC,kBAAkB,CAAC,OAE7BD,IAAUC,kBAAkB,CAACH,EAAMC,OAAOnD,YAE7C,EAvEoB,CAASsD,KAoFjBC,cAAwB3D,GCvFvC4D,IAASvD,OACP,kBAAC,IAAMwD,WAAU,KACf,kBAAC,EAAiB,OAEpBC,SAASC,eAAe,W","file":"static/js/main.b5ef2d84.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\n\nclass StreamlitDatalist extends StreamlitComponentBase {\n  public state = { selection: null, isFocused: false , value: ''}\n\n  public render = (): ReactNode => {\n    const { options, label, def_val } = this.props.args\n    \n    var i = 0\n    const options_html = []\n    for (let option of options){\n      options_html.push(<option value={option} id={option} key={i}/>);\n      i+=1;\n    }\n    \n    const { theme } = this.props\n    const styleLabel: React.CSSProperties = {}\n    const styleInput: React.CSSProperties = {}\n\n    styleLabel.width = '100%'\n    styleLabel.fontSize = '14px'\n    styleLabel.lineHeight = '1.6'\n    styleLabel.transform = 'scale(1,0.95)'\n    styleLabel.fontFamily = theme?.font\n    styleLabel.marginBottom = '0.5rem'\n    styleLabel.height = 'auto'\n    styleLabel.minHeight = '1.5rem'\n    styleLabel.verticalAlign = 'middle'\n\n    styleInput.width = '100%'\n    styleInput.backgroundColor = theme?.secondaryBackgroundColor\n    styleInput.color = theme?.textColor\n    styleInput.padding = \"8px\"\n    styleInput.lineHeight = '1.4'\n    styleInput.borderRadius = \"0.25rem\"\n    styleInput.fontSize = '16px'\n    styleInput.border = \"1px solid\"\n    styleInput.borderColor = \"rgb(0,0,0,0)\"\n    styleInput.textIndent = \"2px\"\n    styleInput.fontWeight = \"normal\"\n\n    if (this.state.isFocused) {\n      styleInput.borderColor = theme?.primaryColor\n      styleInput.outline = '0px'\n    }\n\n    return (\n      <span>\n        <label style = {styleLabel}> {label} <br/> </label>\n        <input style = {styleInput}\n              list=\"datalist-datalist\" \n              name=\"datalist\" \n              id=\"datalist\" \n              defaultValue = {def_val}\n              onChange = {this._updateInputValue}\n              onFocus={this._onFocus}\n              onBlur={this._onBlur}\n              key = {def_val}\n              />\n        \n        <datalist id=\"datalist-datalist\" className='rowWid'>\n          {options_html}\n        </datalist>\n      </span>\n    )\n  }\n\n  private _updateInputValue(event:any) {\n    if (event.target.value===''){\n      Streamlit.setComponentValue([null])\n    }else{\n      Streamlit.setComponentValue([event.target.value])\n    }\n  }\n\n  private _onFocus = (): void => {\n    this.setState({ isFocused: true })\n  }\n\n  private _onBlur = (): void => {\n    this.setState({ isFocused: false })\n  }\n\n}\n\n\nexport default withStreamlitConnection(StreamlitDatalist)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StreamlitDatalist from \"./streamlit_datalist\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitDatalist />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}