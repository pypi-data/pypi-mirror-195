# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash -eux {0}

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip check-manifest
        pip install pytest-cov
        pip install ".[test]"
        python -m ipykernel.kernelspec --user
    - name: Test with pytest
      run: |
        pytest --cov jupyter_console || pytest jupyter_console --lf

  lint:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v2
     - uses: actions/setup-python@v2
     - name: Linting
       run: |
         pip install Flake8-pyproject mypy
         mypy jupyter_console
         flake8 jupyter_console

  check_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyter-server/jupyter_releaser/.github/actions/check-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  check_links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@v1

  test_minimum_versions:
    name: Test Minimum Versions
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
        with:
          dependency_type: minimum
      - name: Run the unit tests
        run: |
          pip install ".[test]"
          pytest || pytest --lf

  tests_check: # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - build
      - lint
      - check_release
      - check_links
      - test_minimum_versions
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
