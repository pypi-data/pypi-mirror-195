{"version":3,"file":"lib_index_js-webpack_sharing_consume_default_react-dom.6ef4ca3d814a8b686f17.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAsD;AACL;AACK;AACb;AACqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2DAAS,EAAE,wEAAmB;AAC7C;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA,0BAA0B,gEAAS;AACnC;AACA,oCAAoC,kDAAa;AACjD,mCAAmC,gEAAc,GAAG,SAAS;AAC7D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;;;;;;ACxCC;AAC4B;AACV;AACI;AACM;AACH;AACM;AACL;AACpD,kBAAkB,oEAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;AACc;AACf;AACA,8BAA8B,qDAAc;AAC5C,wCAAwC,qDAAc;AACtD,8BAA8B,qDAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,0DAAmB,CAAC,+DAAK,IAAI,4CAA4C;AACrF,QAAQ,0DAAmB,CAAC,qEAAY,IAAI;AAC5C;AACA,aAAa;AACb;AACA,aAAa,2DAA2D,YAAY,0BAA0B,0DAAmB,CAAC,mEAAS,IAAI,oDAAoD,IAAI;AACvM,QAAQ,0DAAmB,CAAC,iEAAO,IAAI,qDAAqD;AAC5F,QAAQ,0DAAmB,CAAC,oEAAU,IAAI,mGAAmG;AAC7I,YAAY,0DAAmB,CAAC,iEAAU;AAC1C;;;;;;;;;;;;;;;;;;;;;;;;;ACnD0B;AAC4B;AACR;AACwB;AACd;AAChB;AACE;AACkB;AAC7C;AACf,sBAAsB,oEAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2EAAa;AACzC,kBAAkB,oDAAa,OAAO,oEAAW;AACjD;AACA;AACA;AACA,KAAK;AACL,YAAY,0DAAmB,CAAC,gEAAa,IAAI,cAAc;AAC/D,QAAQ,0DAAmB,CAAC,qEAAW;AACvC,QAAQ,0DAAmB,CAAC,uDAAc;AAC1C,YAAY,0DAAmB,UAAU,yBAAyB;AAClE,gBAAgB,0DAAmB,CAAC,8DAAI,IAAI,gDAAgD;AAC5F,oBAAoB,0DAAmB,CAAC,8DAAI,IAAI,mBAAmB;AACnE,wBAAwB,0DAAmB,CAAC,6DAAG,IAAI;AACnD;AACA;AACA;AACA,+BAA+B;AAC/B,oBAAoB,0DAAmB,CAAC,8DAAI,IAAI,mBAAmB;AACnE,wBAAwB,0DAAmB,CAAC,gEAAM,IAAI,4NAA4N;AAClR,oBAAoB,0DAAmB,CAAC,8DAAI,IAAI,mBAAmB;AACnE,wBAAwB,0DAAmB,CAAC,gEAAM,IAAI,yPAAyP;AAC/S;;;;;;;;;;;;;;;;;;;;;;;AC1F0B;AAC0B;AACc;AACpB;AACQ;AACR;AACJ;AAC3B;AACf,sBAAsB,oEAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,8BAA8B,qDAAc;AAC5C;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,qDAAqD;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY,0DAAmB;AAC/B,QAAQ,0DAAmB,CAAC,8DAAI,IAAI,gDAAgD;AACpF,YAAY,0DAAmB,CAAC,8DAAI,IAAI,mBAAmB;AAC3D,gBAAgB,0DAAmB,CAAC,gEAAM,IAAI,SAAS,gBAAgB,oEAAoE;AAC3I,YAAY,0DAAmB,CAAC,8DAAI,IAAI,mBAAmB;AAC3D,gBAAgB,0DAAmB,CAAC,gEAAM,IAAI,SAAS,gBAAgB,gEAAgE;AACvI,QAAQ,0DAAmB,CAAC,8DAAI,IAAI,oCAAoC;AACxE,YAAY,0DAAmB,CAAC,mEAAS,IAAI,yCAAyC;AACtF,gBAAgB,0DAAmB,CAAC,0EAAgB,IAAI,SAAS,0DAAmB,CAAC,gEAAM,IAAI,mEAAmE,kBAAkB;AACpL,gBAAgB,0DAAmB,CAAC,0EAAgB,IAAI,SAAS,0DAAmB,CAAC,gEAAM,IAAI,qFAAqF,mBAAmB;AACvM,gBAAgB,0DAAmB,CAAC,0EAAgB,IAAI,SAAS,0DAAmB,CAAC,gEAAM,IAAI,uFAAuF,kBAAkB;AACxM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEmD;AACzB;AACS;AACH;AAC2B;AACpB;AACD;AACR;AACY;AACO;AACjD;AACA;AACA;AACO,4BAA4B,6DAAW;AAC9C;AACA;AACA;AACA;AACA,oBAAoB,gDAAU;AAC9B;AACA,gCAAgC,8DAAW,CAAC,wEAAqB;AACjE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,8DAAW,CAAC,wEAAqB;AACjE;AACA;AACA;AACA,kBAAkB,0DAAO;AACzB;AACA;AACA,kBAAkB,sDAAG;AACrB,eAAe,0DAAO;AACtB;AACA;AACA;AACA,QAAQ,+DAA0B,aAAa,yDAAoB;AACnE;AACA;AACA;AACA,yBAAyB,8CAAS,cAAc,0BAA0B;AAC1E;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA,8CAA8C,mBAAmB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,aAAa;AAClD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB;AACnC,YAAY,0DAAmB,CAAC,gDAAc,IAAI;AAClD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB,YAAY,0DAAmB,CAAC,8DAAI,IAAI,gDAAgD;AACxF,gBAAgB,0DAAmB,CAAC,8DAAI,IAAI,mBAAmB;AAC/D,oBAAoB,0DAAmB,CAAC,+CAAM,IAAI,iLAAiL;AACnO,gBAAgB,0DAAmB,CAAC,8DAAI,IAAI,mBAAmB;AAC/D,oBAAoB,0DAAmB,CAAC,+CAAM,IAAI,uKAAuK;AACzN,YAAY,0DAAmB,CAAC,iDAAY,IAAI,oGAAoG;AACpJ;AACA","sources":["webpack://jupyterlab-mol-visualizer/./lib/index.js","webpack://jupyterlab-mol-visualizer/./lib/inputs.js","webpack://jupyterlab-mol-visualizer/./lib/sliders.js","webpack://jupyterlab-mol-visualizer/./lib/switches.js","webpack://jupyterlab-mol-visualizer/./lib/widget.js"],"sourcesContent":["import { MainAreaWidget } from '@jupyterlab/apputils';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { reactIcon } from '@jupyterlab/ui-components';\nimport { CounterWidget } from './widget';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\n/**\n * The command IDs used by the react-widget plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.create = 'create-react-widget';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * Initialization data for the react-widget extension.\n */\nconst extension = {\n    id: 'react-widget',\n    autoStart: true,\n    optional: [ILauncher, IFileBrowserFactory],\n    activate: (app, launcher, browserFactory) => {\n        const { commands } = app;\n        const command = CommandIDs.create;\n        commands.addCommand(command, {\n            caption: 'Create a new React Widget',\n            label: 'MOL Visualizer',\n            icon: args => reactIcon,\n            execute: () => {\n                const content = new CounterWidget(browserFactory);\n                const widget = new MainAreaWidget({ content });\n                widget.title.label = 'MOL Visualizer';\n                app.shell.add(widget, 'main');\n            }\n        });\n        if (launcher) {\n            launcher.add({\n                command\n            });\n        }\n    }\n};\nexport default extension;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 250,\n        height: 30\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1\n    },\n    iconButton: {\n        padding: 10\n    },\n    divider: {\n        height: 28,\n        margin: 4\n    }\n}));\nexport default function Inputs(Props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(Props.options[0]);\n    const [inputValue, setInputValue] = React.useState('');\n    const [files, setFiles] = React.useState(Props.options);\n    const handerClick = () => {\n        Props.inputHandler(value);\n    };\n    Props.factory.defaultBrowser.model.pathChanged.connect((value) => {\n        console.log('The path is changed: OK');\n        const f = Props.getFiles(Props.types);\n        setFiles(f);\n        setValue(f[0]);\n    });\n    return (React.createElement(Paper, { component: \"form\", className: classes.root },\n        React.createElement(Autocomplete, { value: value, onChange: (event, newValue) => {\n                setValue(newValue);\n            }, inputValue: inputValue, onInputChange: (event, newInputValue) => {\n                setInputValue(newInputValue);\n            }, id: \"controllable-states-demo\", options: files, style: { width: 300 }, renderInput: params => (React.createElement(TextField, { ...params, label: Props.label, variant: \"outlined\" })) }),\n        React.createElement(Divider, { className: classes.divider, orientation: \"vertical\" }),\n        React.createElement(IconButton, { color: \"primary\", className: classes.iconButton, \"aria-label\": \"directions\", onClick: handerClick },\n            React.createElement(SearchIcon, null))));\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nexport default function VerticalSlider(Props) {\n    const useStyles = makeStyles({\n        root: {\n            flexGrow: 1,\n            marginTop: '40px',\n            width: '900px',\n            margin: '0 auto'\n        }\n    });\n    function valuetext(value) {\n        return `${value}Â°C`;\n    }\n    const marks2 = [\n        {\n            value: -0.04,\n            label: '-0.04'\n        },\n        {\n            value: -0.02,\n            label: '-0.02'\n        },\n        {\n            value: 0,\n            label: '0'\n        },\n        {\n            value: 0.02,\n            label: '0.02'\n        },\n        {\n            value: 0.04,\n            label: '0.04'\n        }\n    ];\n    const marks1 = [\n        {\n            value: 0,\n            label: '0%'\n        },\n        {\n            value: 20,\n            label: '20%'\n        },\n        {\n            value: 40,\n            label: '40%'\n        },\n        {\n            value: 60,\n            label: '60%'\n        },\n        {\n            value: 80,\n            label: '80%'\n        },\n        {\n            value: 100,\n            label: '100%'\n        }\n    ];\n    const classes = useStyles();\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const theme = React.useMemo(() => createTheme({\n        palette: {\n            type: prefersDarkMode ? 'dark' : 'light'\n        }\n    }), [prefersDarkMode]);\n    return (React.createElement(ThemeProvider, { theme: theme },\n        React.createElement(CssBaseline, null),\n        React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: classes.root },\n                React.createElement(Grid, { container: true, spacing: 3, justify: \"center\" },\n                    React.createElement(Grid, { item: true, sm: 8 },\n                        React.createElement(Box, { id: Props.uuid, style: {\n                                width: '600px',\n                                height: '350px',\n                                backgroundColor: 'black'\n                            } })),\n                    React.createElement(Grid, { item: true, sm: 1 },\n                        React.createElement(Slider, { orientation: \"vertical\", getAriaValueText: valuetext, valueLabelDisplay: \"auto\", defaultValue: 30, \"aria-labelledby\": \"vertical-slider\", min: 0, max: 100, marks: marks1, onChange: Props.changeHandler1, color: 'primary' })),\n                    React.createElement(Grid, { item: true, sm: 1 },\n                        React.createElement(Slider, { orientation: \"vertical\", defaultValue: [0.01, -0.01], \"aria-labelledby\": \"vertical-slider\", getAriaValueText: valuetext, valueLabelDisplay: \"on\", marks: marks2, min: -0.04, max: 0.04, step: 0.001, onChange: Props.changeHandler2, color: 'secondary' })))))));\n}\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nexport default function SwitchLabels(Props) {\n    const useStyles = makeStyles(theme => ({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            alignItems: 'center'\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: 200\n        },\n        formGroup: {\n            alignItems: 'center'\n        }\n    }));\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        checkedA: false,\n        checkedB: true,\n        checkedC: true\n    });\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        if (event.target.name === 'checkedA') {\n            Props.clickHandler1();\n        }\n        if (event.target.name === 'checkedB') {\n            Props.clickHandler2();\n        }\n        if (event.target.name === 'checkedC') {\n            Props.clickHandler3();\n        }\n    };\n    const handleClick = () => {\n        Props.bclick1();\n        setState({\n            checkedA: state.checkedA,\n            checkedB: !state.checkedB,\n            checkedC: !state.checkedC\n        });\n    };\n    return (React.createElement(\"div\", null,\n        React.createElement(Grid, { container: true, spacing: 3, justify: \"center\" },\n            React.createElement(Grid, { item: true, sm: 3 },\n                React.createElement(Button, { style: { height: '20px' }, color: \"secondary\", variant: \"contained\", onClick: Props.bclick2 }, \"Toggle structure\")),\n            React.createElement(Grid, { item: true, sm: 3 },\n                React.createElement(Button, { style: { height: '20px' }, color: \"primary\", variant: \"contained\", onClick: handleClick }, \"Toggle surface\"))),\n        React.createElement(Grid, { container: true, justify: \"center\" },\n            React.createElement(FormGroup, { className: classes.formGroup, row: true },\n                React.createElement(FormControlLabel, { control: React.createElement(Switch, { checked: state.checkedA, onChange: handleChange, name: \"checkedA\" }), label: \"Spin\" }),\n                React.createElement(FormControlLabel, { control: React.createElement(Switch, { checked: state.checkedB, onChange: handleChange, name: \"checkedB\", color: \"primary\" }), label: \"Alpha\" }),\n                React.createElement(FormControlLabel, { control: React.createElement(Switch, { checked: state.checkedC, onChange: handleChange, name: \"checkedC\", color: \"secondary\" }), label: \"Beta\" })))));\n}\n","import { ReactWidget } from '@jupyterlab/apputils';\nimport React from 'react';\nimport * as NGL from '@osscar/ngl';\nimport * as _ from 'underscore';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport VerticalSlider from './sliders';\nimport SwitchLabels from './switches';\nimport Inputs from './inputs';\nimport Grid from '@material-ui/core/Grid';\nimport { toArray, map } from '@lumino/algorithm';\n/**\n * A Counter Lumino Widget that wraps a CounterComponent.\n */\nexport class CounterWidget extends ReactWidget {\n    constructor(browserFactory) {\n        var _a;\n        super();\n        this.addClass('jp-ReactWidget');\n        this.uuid = _.uniqueId('ngl_');\n        this.browserFactory = browserFactory;\n        this.currentDirectory = URLExt.join(PageConfig.getBaseUrl() + '/files', ((_a = this.browserFactory) === null || _a === void 0 ? void 0 : _a.defaultBrowser.model.path) + '/');\n        window.requestAnimationFrame(() => {\n            this.visualizer();\n        });\n        this.addStructure = this.addStructure.bind(this);\n        this.addIsosurface = this.addIsosurface.bind(this);\n        this.getCurrentDirectory = this.getCurrentDirectory.bind(this);\n        this.updateDatasource = this.updateDatasource.bind(this);\n        this.getFileList = this.getFileList.bind(this);\n    }\n    getCurrentDirectory() {\n        var _a;\n        this.currentDirectory = URLExt.join(PageConfig.getBaseUrl() + '/files', ((_a = this.browserFactory) === null || _a === void 0 ? void 0 : _a.defaultBrowser.model.path) + '/');\n    }\n    getFileList(types) {\n        var _a;\n        const a = toArray((_a = this.browserFactory) === null || _a === void 0 ? void 0 : _a.defaultBrowser.model.items());\n        const b = a.filter(item => item.type === 'file' &&\n            types.includes(item.name.split('.').pop()));\n        const c = map(b, x => x.name);\n        return toArray(c);\n    }\n    updateDatasource() {\n        this.getCurrentDirectory();\n        NGL.DatasourceRegistry.add('data', new NGL.StaticDatasource(this.currentDirectory));\n    }\n    visualizer() {\n        this.updateDatasource();\n        this.stage = new NGL.Stage(this.uuid, { backgroundColor: 'black' });\n        window.addEventListener('resize', event => {\n            this.stage.handleResize();\n        }, false);\n        this.stage.viewer.container.addEventListener('dblclick', () => {\n            this.stage.toggleFullscreen();\n        });\n    }\n    addStructure(filename) {\n        this.updateDatasource();\n        this.stage.getComponentsByName('structure1').forEach((element) => {\n            this.stage.removeComponent(element);\n        });\n        this.stage\n            .loadFile('data://' + filename, { name: 'structure1' })\n            .then((o) => {\n            o.addRepresentation('ball+stick');\n            o.autoView();\n        });\n    }\n    addIsosurface(filename) {\n        this.updateDatasource();\n        this.stage.getComponentsByName('surface_1').forEach((element) => {\n            this.stage.removeComponent(element);\n        });\n        this.stage.getComponentsByName('surface_2').forEach((element) => {\n            this.stage.removeComponent(element);\n        });\n        this.stage\n            .loadFile('data://' + filename, { name: 'surface_1' })\n            .then((o) => {\n            o.addRepresentation('surface', {\n                visible: true,\n                isolevelType: 'value',\n                isolevel: 0.01,\n                color: 'blue',\n                opacity: 0.7,\n                opaqueBack: false\n            });\n            o.signals.visibilityChanged.add((value) => {\n                console.log('visibility change to:' + value);\n            });\n            o.autoView();\n        });\n        this.stage\n            .loadFile('data://' + filename, { name: 'surface_2' })\n            .then((o) => {\n            o.addRepresentation('surface', {\n                visible: true,\n                isolevelType: 'value',\n                isolevel: -0.01,\n                color: 'red',\n                opacity: 0.7,\n                opaqueBack: false\n            });\n            o.autoView();\n        });\n    }\n    updateIsosurface(e) {\n        this.stage\n            .getRepresentationsByName('surface')\n            .setParameters({ opacity: e });\n        this.stage.getComponentsByName('surface_1').list[0].setVisibility(true);\n        this.stage.getComponentsByName('surface_2').list[0].setVisibility(true);\n    }\n    updateIsolevel(e, filename) {\n        this.stage\n            .getComponentsByName(filename)\n            .list[0].eachRepresentation((reprElem) => {\n            reprElem.setParameters({ isolevel: e });\n        });\n    }\n    toggleVisibility(filename) {\n        const a = this.stage.getComponentsByName(filename).list[0];\n        a.setVisibility(!a.visible);\n    }\n    setVisibility(filename, val) {\n        const a = this.stage.getComponentsByName(filename).list[0];\n        a.setVisibility(val);\n    }\n    toggleSpin() {\n        this.stage.toggleSpin();\n    }\n    render() {\n        const func1 = () => this.stage.toggleSpin();\n        const func2 = () => this.toggleVisibility('surface_1');\n        const func3 = () => this.toggleVisibility('surface_2');\n        const bfunc1 = () => {\n            this.toggleVisibility('surface_1');\n            this.toggleVisibility('surface_2');\n        };\n        const bfunc2 = () => {\n            this.toggleVisibility('structure1');\n        };\n        return (React.createElement(\"div\", null,\n            React.createElement(VerticalSlider, { uuid: this.uuid, changeHandler1: (event, val) => {\n                    const value = val / 100.0;\n                    this.updateIsosurface(value);\n                }, changeHandler2: (event, val) => {\n                    const value = val;\n                    this.updateIsolevel(value[0], 'surface_1');\n                    this.updateIsolevel(value[1], 'surface_2');\n                } }),\n            React.createElement(Grid, { container: true, spacing: 3, justify: \"center\" },\n                React.createElement(Grid, { item: true, sm: 4 },\n                    React.createElement(Inputs, { getFiles: this.getFileList, types: ['sdf', 'cif'], factory: this.browserFactory, label: \"Structure\", options: this.getFileList(['sdf', 'cif']), inputHandler: this.addStructure })),\n                React.createElement(Grid, { item: true, sm: 4 },\n                    React.createElement(Inputs, { getFiles: this.getFileList, types: ['cube'], factory: this.browserFactory, label: \"Isosurface\", options: this.getFileList(['cube']), inputHandler: this.addIsosurface }))),\n            React.createElement(SwitchLabels, { clickHandler1: func1, clickHandler2: func2, clickHandler3: func3, bclick1: bfunc1, bclick2: bfunc2 })));\n    }\n}\n"],"names":[],"sourceRoot":""}