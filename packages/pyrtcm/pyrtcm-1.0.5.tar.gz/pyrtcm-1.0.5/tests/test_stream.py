"""
Stream method tests using actual receiver binary outputs for pyrtcm.rtcmReader 

Created on 3 Oct 2020 

*** NB: must be saved in UTF-8 format ***

@author: semuadmin
"""
# pylint: disable=line-too-long, invalid-name, missing-docstring, no-member

import sys
import os
from io import StringIO
import unittest

from pyrtcm import RTCMReader, RTCMMessage
import pyrtcm.exceptions as rte
import pyrtcm.rtcmtypes_core as rtt


class StreamTest(unittest.TestCase):
    def setUp(self):
        self.maxDiff = None
        dirname = os.path.dirname(__file__)
        self._raw1005ex = b"\xD3\x00\x13\x3E\xD7\xD3\x02\x02\x98\x0E\xDE\xEF\x34\xB4\xBD\x62\xAC\x09\x41\x98\x6F\x33\x36\x0B\x98"
        self._raw1005 = (
            b"\xd3\x00\x13>\xd0\x00\x03\x8aX\xd9I<\x87/4\x10\x9d\x07\xd6\xafH Z\xd7\xf7"
        )
        self._raw1007 = b"\xd3\x00\x08>\xf4\xd2\x03ABC\xeapo\xc7"
        # 00111110 11110100 11010010 00000011 01000001 01000010 01000011 11101010
        self._raw1065 = (
            b"\xd3\x00\x12B\x91\x81\xc9\x84\x00\x04B\xb8\x88\x008\x80\t\xd0F\x00(\xf0kf"
        )
        self._raw1023 = b'\xd3\x00I?\xf0\x8c\xa9\x02\xe0\xe0(\x80P\x07\x04\x04\x80P\x00{?\xc0/o\xf0\x0b\xee\xfc\x81\xfd\xbfp\x17\xc4\x04\x04\xf9\x80\x00\xdf?\xe8#\xe7\xfb\x02~\x00`o\xc8\x04\x11\xfa\xff\x82\xbf?\xc07\xfc\n\x08\x00\x00\x81@\x10\x00/\xff\xfe\x0bz"\x00\xc1\x16\x92'
        self._payload1007 = self._raw1007[3:-3]

    def tearDown(self):
        pass

    def catchio(self):
        """
        Capture stdout as string.
        """

        self._saved_stdout = sys.stdout
        self._strout = StringIO()
        sys.stdout = self._strout

    def restoreio(self) -> str:
        """
        Return captured output and restore stdout.
        """

        sys.stdout = self._saved_stdout
        return self._strout.getvalue().strip()

    def test1005example(
        self,
    ):  # test sample 1005 given in RTCM standard (with scaling applied)
        EXPECTED_RESULT = "<RTCM(1005, DF002=1005, DF003=2003, DF021=0, DF022=1, DF023=0, DF024=0, DF141=0, DF025=1114104.5999, DF142=0, DF001_1=0, DF026=-4850729.7108, DF364=0, DF027=3975521.4643)>"
        msg = RTCMReader.parse(self._raw1005ex)
        self.assertEqual(str(msg), EXPECTED_RESULT)
        self.assertEqual(msg.DF025, 1114104.5999)
        self.assertEqual(msg.DF026, -4850729.7108)
        self.assertEqual(msg.DF027, 3975521.4643)

    def test1023(
        self,
    ):  # test sample 1023 given in RTCM standard
        EXPECTED_RESULT = "<RTCM(1023, DF002=1023, DF147=8, DF190=1, DF191=1, DF192=173067.5, DF193=57384.5, DF194=5.0, DF195=7.0, DF196=0.008, DF197=0.009, DF198=0.8, DF199_01=0.0, DF200_01=-0.0006, DF201_01=-0.002, DF199_02=6e-05, DF200_02=-0.00057, DF201_02=-0.004, DF199_03=0.00015, DF200_03=-0.00054, DF201_03=-0.007, DF199_04=0.00021, DF200_04=-0.00057, DF201_04=-0.009, DF199_05=6e-05, DF200_05=-0.00045, DF201_05=0.002, DF199_06=0.00012, DF200_06=-0.00039, DF201_06=0.0, DF199_07=0.00018, DF200_07=-0.00039, DF201_07=-0.003, DF199_08=0.00024, DF200_08=-0.00039, DF201_08=-0.005, DF199_09=0.00012, DF200_09=-0.00024, DF201_09=0.003, DF199_10=0.00018, DF200_10=-0.00021, DF201_10=0.001, DF199_11=0.00024, DF200_11=-0.00018, DF201_11=-0.001, DF199_12=0.0003, DF200_12=-0.00021, DF201_12=-0.004, DF199_13=0.00018, DF200_13=-3e-05, DF201_13=0.005, DF199_14=0.00024, DF200_14=0.0, DF201_14=0.002, DF199_15=0.0003, DF200_15=3e-05, DF201_15=0.0, DF199_16=0.00033, DF200_16=-3e-05, DF201_16=-0.002, DF212=0, DF213=0, DF216=5, DF217=5, DF051=59528)>"
        msg = RTCMReader.parse(self._raw1023)
        self.assertEqual(str(msg), EXPECTED_RESULT)

    def test1230(
        self,
    ):  # test sample 1230
        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-1230.bin"), "rb")
        EXPECTED_RESULT = [
            "<RTCM(1230, DF002=1230, DF003=0, DF421=0, DF001_3=0, DF422=15, DF423=0.0, DF424=0.0, DF425=0.0, DF426=0.0)>",
            "<RTCM(1230, DF002=1230, DF003=0, DF421=0, DF001_3=0, DF422=15, DF423=0.0, DF424=0.0, DF425=0.0, DF426=0.0)>",
            "<RTCM(1230, DF002=1230, DF003=0, DF421=0, DF001_3=0, DF422=15, DF423=0.0, DF424=0.0, DF425=0.0, DF426=0.0)>",
            "<RTCM(1230, DF002=1230, DF003=0, DF421=0, DF001_3=0, DF422=15, DF423=0.0, DF424=0.0, DF425=0.0, DF426=0.0)>",
            "<RTCM(1230, DF002=1230, DF003=0, DF421=0, DF001_3=0, DF422=11, DF423=0.0, DF425=0.0, DF426=0.0)>",
        ]
        rtr = RTCMReader(stream, quitonerror=2)
        i = 0
        for raw, parsed in rtr:
            # print(f"{i} - {parsed}\n{raw}")
            self.assertEqual(str(parsed), EXPECTED_RESULT[i])
            i += 1
        self.assertEqual(i, 5)
        stream.close()

    def testMIXEDRTCM_NOSCALE(
        self,
    ):  # test mixed stream of NMEA, UBX & RTCM messages with no scaling applied
        EXPECTED_RESULTS = (
            "<RTCM(1005, DF002=1005, DF003=0, DF021=0, DF022=1, DF023=1, DF024=1, DF141=0, DF025=44440308028, DF142=1, DF001_1=0, DF026=30856712349, DF364=0, DF027=33666582560)>",
            "<RTCM(4072, DF002=4072, Not_Yet_Implemented)>",
            "<RTCM(1077, DF002=1077, DF003=0, GNSSEpoch=204137001, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=760738918298550272, NSat=10, DF395=1073807360, NSig=2, DF396=1044459, DF397_01=75, DF397_02=75, DF397_03=81, DF397_04=72, DF397_05=67, DF397_06=80, DF397_07=75, DF397_08=82, DF397_09=75, DF397_10=71, GNSSSpecific_01=0, GNSSSpecific_02=0, GNSSSpecific_03=0, GNSSSpecific_04=0, GNSSSpecific_05=0, GNSSSpecific_06=0, GNSSSpecific_07=0, GNSSSpecific_08=0, GNSSSpecific_09=0, GNSSSpecific_10=0, DF398_01=6, DF398_02=547, DF398_03=781, DF398_04=142, DF398_05=563, DF398_06=116, DF398_07=823, DF398_08=105, DF398_09=534, DF398_10=354, DF399_01=-178, DF399_02=-304, DF399_03=-643, DF399_04=477, DF399_05=-52, DF399_06=645, DF399_07=529, DF399_08=643, DF399_09=-428, DF399_10=-181, DF405_01=76821, DF405_02=76146, DF405_03=208482, DF405_04=207990, DF405_05=-259757, DF405_06=-251705, DF405_07=186759, DF405_08=117947, DF405_09=115540, DF405_10=-101213, DF405_11=-98350, DF405_12=-54158, DF405_13=-52852, DF405_14=257029, DF405_15=234424, DF405_16=-166735, DF405_17=-165708, DF405_18=19050, DF405_19=66738, DF405_20=-89908, DF406_01=-5308213, DF406_02=2100994, DF406_03=646922, DF406_04=-8388426, DF406_05=2052210, DF406_06=1331313, DF406_07=3907486, DF406_08=2985887, DF406_09=-3477557, DF406_10=-6590515, DF406_11=229592, DF406_12=7356644, DF406_13=6356828, DF406_14=-3272866, DF406_15=30037, DF406_16=5592405, DF406_17=5592405, DF406_18=5592405, DF406_19=5592405, DF406_20=5592405, DF407_01=157, DF407_02=341, DF407_03=341, DF407_04=340, DF407_05=0, DF407_06=22, DF407_07=531, DF407_08=21, DF407_09=531, DF407_10=531, DF407_11=530, DF407_12=534, DF407_13=535, DF407_14=23, DF407_15=19, DF407_16=529, DF407_17=22, DF407_18=531, DF407_19=15, DF407_20=534, DF420_01=1, DF420_02=0, DF420_03=0, DF420_04=0, DF420_05=0, DF420_06=1, DF420_07=0, DF420_08=1, DF420_09=1, DF420_10=1, DF420_11=0, DF420_12=0, DF420_13=0, DF420_14=0, DF420_15=0, DF420_16=1, DF420_17=0, DF420_18=1, DF420_19=0, DF420_20=0, DF408_01=534, DF408_02=1009, DF408_03=736, DF408_04=727, DF408_05=895, DF408_06=763, DF408_07=859, DF408_08=1013, DF408_09=896, DF408_10=770, DF408_11=403, DF408_12=1002, DF408_13=383, DF408_14=340, DF408_15=293, DF408_16=457, DF408_17=201, DF408_18=74, DF408_19=514, DF408_20=368, DF404_01=6636, DF404_02=-9556, DF404_03=-2148, DF404_04=-2174, DF404_05=0, DF404_06=0, DF404_07=0, DF404_08=0, DF404_09=0, DF404_10=0, DF404_11=0, DF404_12=0, DF404_13=0, DF404_14=0, DF404_15=0, DF404_16=0, DF404_17=0, DF404_18=0, DF404_19=0, DF404_20=0)>",
            "<RTCM(1087, DF002=1087, DF003=0, GNSSEpoch=310554457, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=4039168114821169152, NSat=7, DF395=1090519040, NSig=2, DF396=16382, DF397_01=69, DF397_02=64, DF397_03=73, DF397_04=76, DF397_05=66, DF397_06=70, DF397_07=78, GNSSSpecific_01=12, GNSSSpecific_02=13, GNSSSpecific_03=8, GNSSSpecific_04=5, GNSSSpecific_05=0, GNSSSpecific_06=7, GNSSSpecific_07=10, DF398_01=649, DF398_02=351, DF398_03=260, DF398_04=318, DF398_05=525, DF398_06=847, DF398_07=905, DF399_01=-665, DF399_02=29, DF399_03=672, DF399_04=-573, DF399_05=-211, DF399_06=312, DF399_07=317, DF405_01=133875, DF405_02=134842, DF405_03=-25120, DF405_04=-27605, DF405_05=5983, DF405_06=11545, DF405_07=252755, DF405_08=257427, DF405_09=-208262, DF405_10=-201884, DF405_11=148812, DF405_12=154159, DF405_13=-126765, DF405_14=33470, DF406_01=4227962, DF406_02=7333543, DF406_03=5236001, DF406_04=-2095656, DF406_05=7342958, DF406_06=6354573, DF406_07=-5177808, DF406_08=8336583, DF406_09=-7390471, DF406_10=-6254160, DF406_11=-4155640, DF406_12=3113920, DF406_13=-5941931, DF406_14=5576005, DF407_01=341, DF407_02=341, DF407_03=325, DF407_04=341, DF407_05=341, DF407_06=341, DF407_07=341, DF407_08=341, DF407_09=320, DF407_10=1, DF407_11=481, DF407_12=257, DF407_13=481, DF407_14=321, DF420_01=0, DF420_02=1, DF420_03=1, DF420_04=1, DF420_05=1, DF420_06=0, DF420_07=0, DF420_08=0, DF420_09=0, DF420_10=1, DF420_11=0, DF420_12=0, DF420_13=1, DF420_14=1, DF408_01=530, DF408_02=16, DF408_03=536, DF408_04=21, DF408_05=536, DF408_06=20, DF408_07=20, DF408_08=535, DF408_09=1023, DF408_10=768, DF408_11=616, DF408_12=347, DF408_13=265, DF408_14=679, DF404_01=5287, DF404_02=4605, DF404_03=-14211, DF404_04=-15811, DF404_05=-3491, DF404_06=-4157, DF404_07=-5501, DF404_08=-4762, DF404_09=64, DF404_10=0, DF404_11=0, DF404_12=0, DF404_13=0, DF404_14=0)>",
            "<RTCM(1097, DF002=1097, DF003=0, GNSSEpoch=204137001, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=216181732825628672, NSat=5, DF395=1073872896, NSig=2, DF396=1023, DF397_01=79, DF397_02=84, DF397_03=89, DF397_04=78, DF397_05=83, GNSSSpecific_01=0, GNSSSpecific_02=0, GNSSSpecific_03=0, GNSSSpecific_04=0, GNSSSpecific_05=0, DF398_01=160, DF398_02=257, DF398_03=363, DF398_04=380, DF398_05=266, DF399_01=-198, DF399_02=-516, DF399_03=423, DF399_04=63, DF399_05=-384, DF405_01=-24373, DF405_02=-15168, DF405_03=-185743, DF405_04=-175463, DF405_05=258219, DF405_06=269106, DF405_07=-73530, DF405_08=-67668, DF405_09=-9900, DF405_10=-1633, DF406_01=-95448, DF406_02=-60891, DF406_03=-757091, DF406_04=-700882, DF406_05=1035170, DF406_06=1075556, DF406_07=-295430, DF406_08=-271348, DF406_09=-38736, DF406_10=-7071, DF407_01=341, DF407_02=341, DF407_03=341, DF407_04=341, DF407_05=341, DF407_06=341, DF407_07=341, DF407_08=341, DF407_09=341, DF407_10=341, DF420_01=0, DF420_02=0, DF420_03=0, DF420_04=0, DF420_05=0, DF420_06=0, DF420_07=0, DF420_08=0, DF420_09=0, DF420_10=0, DF408_01=736, DF408_02=784, DF408_03=656, DF408_04=688, DF408_05=688, DF408_06=688, DF408_07=720, DF408_08=784, DF408_09=688, DF408_10=752, DF404_01=-5806, DF404_02=-5831, DF404_03=-7947, DF404_04=-7943, DF404_05=7243, DF404_06=7174, DF404_07=5534, DF404_08=5545, DF404_09=-7726, DF404_10=-7733)>",
            "<RTCM(1127, DF002=1127, DF003=0, GNSSEpoch=204123001, DF393=0, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=198178247981137920, NSat=10, DF395=1074003968, NSig=2, DF396=387754, DF397_01=129, DF397_02=132, DF397_03=126, DF397_04=75, DF397_05=81, DF397_06=84, DF397_07=78, DF397_08=74, DF397_09=130, DF397_10=86, GNSSSpecific_01=0, GNSSSpecific_02=0, GNSSSpecific_03=0, GNSSSpecific_04=0, GNSSSpecific_05=0, GNSSSpecific_06=0, GNSSSpecific_07=0, GNSSSpecific_08=0, GNSSSpecific_09=0, GNSSSpecific_10=0, DF398_01=120, DF398_02=493, DF398_03=317, DF398_04=743, DF398_05=420, DF398_06=584, DF398_07=573, DF398_08=330, DF398_09=592, DF398_10=690, DF399_01=-130, DF399_02=-58, DF399_03=-81, DF399_04=32, DF399_05=-398, DF399_06=436, DF399_07=-523, DF399_08=-65, DF399_09=-182, DF399_10=79, DF405_01=-208596, DF405_02=122033, DF405_03=216714, DF405_04=212638, DF405_05=-89572, DF405_06=-25529, DF405_07=197283, DF405_08=142968, DF405_09=-134357, DF405_10=-63371, DF405_11=-157715, DF405_12=-52105, DF405_13=-325781, DF405_14=-40749, DF405_15=410892, DF405_16=-10513, DF405_17=-358508, DF405_18=-6508, DF405_19=134173, DF405_20=413835, DF406_01=2547580, DF406_02=5418945, DF406_03=-3747995, DF406_04=6002005, DF406_05=5592405, DF406_06=5592405, DF406_07=5592405, DF406_08=5592405, DF406_09=4195745, DF406_10=4740118, DF406_11=-7995024, DF406_12=5511046, DF406_13=90198, DF406_14=1734068, DF406_15=817816, DF406_16=-681891, DF406_17=-6087808, DF406_18=7097829, DF406_19=-6673806, DF406_20=-2517014, DF407_01=0, DF407_02=0, DF407_03=0, DF407_04=0, DF407_05=0, DF407_06=0, DF407_07=0, DF407_08=0, DF407_09=0, DF407_10=0, DF407_11=0, DF407_12=0, DF407_13=0, DF407_14=0, DF407_15=0, DF407_16=0, DF407_17=0, DF407_18=0, DF407_19=0, DF407_20=0, DF420_01=0, DF420_02=0, DF420_03=0, DF420_04=0, DF420_05=0, DF420_06=0, DF420_07=0, DF420_08=0, DF420_09=0, DF420_10=0, DF420_11=0, DF420_12=0, DF420_13=0, DF420_14=0, DF420_15=0, DF420_16=0, DF420_17=0, DF420_18=0, DF420_19=0, DF420_20=0, DF408_01=0, DF408_02=0, DF408_03=0, DF408_04=0, DF408_05=0, DF408_06=0, DF408_07=0, DF408_08=0, DF408_09=0, DF408_10=0, DF408_11=0, DF408_12=0, DF408_13=0, DF408_14=0, DF408_15=0, DF408_16=0, DF408_17=0, DF408_18=0, DF408_19=0, DF408_20=0, DF404_01=0, DF404_02=0, DF404_03=0, DF404_04=0, DF404_05=0, DF404_06=0, DF404_07=0, DF404_08=0, DF404_09=0, DF404_10=0, DF404_11=0, DF404_12=0, DF404_13=0, DF404_14=0, DF404_15=0, DF404_16=0, DF404_17=0, DF404_18=0, DF404_19=0, DF404_20=0)>",
            "<RTCM(1230, DF002=1230, DF003=0, DF421=1, DF001_3=0, DF422=0, )>",
            "<RTCM(1007, DF002=1007, DF003=1234, DF029=3, DF030_01=A, DF030_02=B, DF030_03=C, DF031=234)>",
            "<RTCM(1117, DF002=1117, DF003=0, GNSSEpoch=385820000, DF393=1, DF409=0, DF001_7=0, DF411=1, DF412=0, DF417=0, DF418=0, DF394=7061644215716937728, NSat=3, DF395=1073774849, NSig=4, DF396=4095, DF397_01=140, DF397_02=112, DF397_03=133, GNSSSpecific_01=0, GNSSSpecific_02=0, GNSSSpecific_03=0, DF398_01=176, DF398_02=128, DF398_03=893, DF399_01=481, DF399_02=-28, DF399_03=1, DF405_01=121518, DF405_02=141210, DF405_03=131740, DF405_04=123624, DF405_05=-20668, DF405_06=-4471, DF405_07=-12126, DF405_08=-17656, DF405_09=-52645, DF405_10=-38454, DF405_11=-46050, DF405_12=-51391, DF406_01=-471984, DF406_02=1075651, DF406_03=-8483, DF406_04=476711, DF406_05=837780, DF406_06=-367061, DF406_07=-358394, DF406_08=-404031, DF406_09=610251, DF406_10=-420698, DF406_11=441746, DF406_12=381254, DF407_01=516, DF407_02=462, DF407_03=684, DF407_04=365, DF407_05=648, DF407_06=649, DF407_07=649, DF407_08=649, DF407_09=568, DF407_10=704, DF407_11=704, DF407_12=704, DF420_01=0, DF420_02=0, DF420_03=0, DF420_04=0, DF420_05=0, DF420_06=0, DF420_07=0, DF420_08=0, DF420_09=0, DF420_10=0, DF420_11=0, DF420_12=0, DF408_01=485, DF408_02=574, DF408_03=552, DF408_04=552, DF408_05=778, DF408_06=808, DF408_07=842, DF408_08=819, DF408_09=613, DF408_10=699, DF408_11=733, DF408_12=645, DF404_01=-1064, DF404_02=-16384, DF404_03=-16384, DF404_04=-16384, DF404_05=-5875, DF404_06=-16384, DF404_07=-16384, DF404_08=-16384, DF404_09=-4130, DF404_10=-16384, DF404_11=-16384, DF404_12=-16384)>",
        )
        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-RTCM3.log"), "rb")
        i = 0
        raw = 0
        rtr = RTCMReader(stream, scaling=False, labelmsm=False)
        for raw, parsed in rtr:
            if raw is not None:
                self.assertEqual(str(parsed), EXPECTED_RESULTS[i])
                i += 1
        stream.close()

    def testMIXEDRTCM_SCALE(
        self,
    ):  # test mixed stream of NMEA, UBX & RTCM messages with scaling applied
        EXPECTED_RESULTS = (
            "<RTCM(1005, DF002=1005, DF003=0, DF021=0, DF022=1, DF023=1, DF024=1, DF141=0, DF025=4444030.8028, DF142=1, DF001_1=0, DF026=3085671.2349, DF364=0, DF027=3366658.256)>",
            "<RTCM(4072, DF002=4072, Not_Yet_Implemented)>",
            "<RTCM(1077, DF002=1077, DF003=0, GNSSEpoch=204137001, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=760738918298550272, NSat=10, DF395=1073807360, NSig=2, DF396=1044459, DF397_01=75, DF397_02=75, DF397_03=81, DF397_04=72, DF397_05=67, DF397_06=80, DF397_07=75, DF397_08=82, DF397_09=75, DF397_10=71, GNSSSpecific_01=0, GNSSSpecific_02=0, GNSSSpecific_03=0, GNSSSpecific_04=0, GNSSSpecific_05=0, GNSSSpecific_06=0, GNSSSpecific_07=0, GNSSSpecific_08=0, GNSSSpecific_09=0, GNSSSpecific_10=0, DF398_01=0.00585938, DF398_02=0.53417969, DF398_03=0.76269531, DF398_04=0.13867188, DF398_05=0.54980469, DF398_06=0.11328125, DF398_07=0.80371094, DF398_08=0.10253906, DF398_09=0.52148438, DF398_10=0.34570312, DF399_01=-178, DF399_02=-304, DF399_03=-643, DF399_04=477, DF399_05=-52, DF399_06=645, DF399_07=529, DF399_08=643, DF399_09=-428, DF399_10=-181, DF405_01=0.00014309, DF405_02=0.00014183, DF405_03=0.00038833, DF405_04=0.00038741, DF405_05=-0.00048384, DF405_06=-0.00046884, DF405_07=0.00034787, DF405_08=0.00021969, DF405_09=0.00021521, DF405_10=-0.00018852, DF405_11=-0.00018319, DF405_12=-0.00010088, DF405_13=-9.844e-05, DF405_14=0.00047875, DF405_15=0.00043665, DF405_16=-0.00031057, DF405_17=-0.00030866, DF405_18=3.548e-05, DF405_19=0.00012431, DF405_20=-0.00016747, DF406_01=-0.00247183, DF406_02=0.00097835, DF406_03=0.00030125, DF406_04=-0.00390617, DF406_05=0.00095563, DF406_06=0.00061994, DF406_07=0.00181956, DF406_08=0.00139041, DF406_09=-0.00161936, DF406_10=-0.00306895, DF406_11=0.00010691, DF406_12=0.0034257, DF406_13=0.00296013, DF406_14=-0.00152405, DF406_15=1.399e-05, DF406_16=0.00260417, DF406_17=0.00260417, DF406_18=0.00260417, DF406_19=0.00260417, DF406_20=0.00260417, DF407_01=157, DF407_02=341, DF407_03=341, DF407_04=340, DF407_05=0, DF407_06=22, DF407_07=531, DF407_08=21, DF407_09=531, DF407_10=531, DF407_11=530, DF407_12=534, DF407_13=535, DF407_14=23, DF407_15=19, DF407_16=529, DF407_17=22, DF407_18=531, DF407_19=15, DF407_20=534, DF420_01=1, DF420_02=0, DF420_03=0, DF420_04=0, DF420_05=0, DF420_06=1, DF420_07=0, DF420_08=1, DF420_09=1, DF420_10=1, DF420_11=0, DF420_12=0, DF420_13=0, DF420_14=0, DF420_15=0, DF420_16=1, DF420_17=0, DF420_18=1, DF420_19=0, DF420_20=0, DF408_01=8544, DF408_02=16144, DF408_03=11776, DF408_04=11632, DF408_05=14320, DF408_06=12208, DF408_07=13744, DF408_08=16208, DF408_09=14336, DF408_10=12320, DF408_11=6448, DF408_12=16032, DF408_13=6128, DF408_14=5440, DF408_15=4688, DF408_16=7312, DF408_17=3216, DF408_18=1184, DF408_19=8224, DF408_20=5888, DF404_01=0.6636, DF404_02=-0.9556, DF404_03=-0.2148, DF404_04=-0.2174, DF404_05=0.0, DF404_06=0.0, DF404_07=0.0, DF404_08=0.0, DF404_09=0.0, DF404_10=0.0, DF404_11=0.0, DF404_12=0.0, DF404_13=0.0, DF404_14=0.0, DF404_15=0.0, DF404_16=0.0, DF404_17=0.0, DF404_18=0.0, DF404_19=0.0, DF404_20=0.0)>",
            "<RTCM(1087, DF002=1087, DF003=0, GNSSEpoch=310554457, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=4039168114821169152, NSat=7, DF395=1090519040, NSig=2, DF396=16382, DF397_01=69, DF397_02=64, DF397_03=73, DF397_04=76, DF397_05=66, DF397_06=70, DF397_07=78, GNSSSpecific_01=12, GNSSSpecific_02=13, GNSSSpecific_03=8, GNSSSpecific_04=5, GNSSSpecific_05=0, GNSSSpecific_06=7, GNSSSpecific_07=10, DF398_01=0.63378906, DF398_02=0.34277344, DF398_03=0.25390625, DF398_04=0.31054688, DF398_05=0.51269531, DF398_06=0.82714844, DF398_07=0.88378906, DF399_01=-665, DF399_02=29, DF399_03=672, DF399_04=-573, DF399_05=-211, DF399_06=312, DF399_07=317, DF405_01=0.00024936, DF405_02=0.00025116, DF405_03=-4.679e-05, DF405_04=-5.142e-05, DF405_05=1.114e-05, DF405_06=2.15e-05, DF405_07=0.00047079, DF405_08=0.0004795, DF405_09=-0.00038792, DF405_10=-0.00037604, DF405_11=0.00027718, DF405_12=0.00028714, DF405_13=-0.00023612, DF405_14=6.234e-05, DF406_01=0.0019688, DF406_02=0.00341495, DF406_03=0.0024382, DF406_04=-0.00097587, DF406_05=0.00341933, DF406_06=0.00295908, DF406_07=-0.0024111, DF406_08=0.00388202, DF406_09=-0.00344146, DF406_10=-0.00291232, DF406_11=-0.00193512, DF406_12=0.00145003, DF406_13=-0.00276693, DF406_14=0.00259653, DF407_01=341, DF407_02=341, DF407_03=325, DF407_04=341, DF407_05=341, DF407_06=341, DF407_07=341, DF407_08=341, DF407_09=320, DF407_10=1, DF407_11=481, DF407_12=257, DF407_13=481, DF407_14=321, DF420_01=0, DF420_02=1, DF420_03=1, DF420_04=1, DF420_05=1, DF420_06=0, DF420_07=0, DF420_08=0, DF420_09=0, DF420_10=1, DF420_11=0, DF420_12=0, DF420_13=1, DF420_14=1, DF408_01=8480, DF408_02=256, DF408_03=8576, DF408_04=336, DF408_05=8576, DF408_06=320, DF408_07=320, DF408_08=8560, DF408_09=16368, DF408_10=12288, DF408_11=9856, DF408_12=5552, DF408_13=4240, DF408_14=10864, DF404_01=0.5287, DF404_02=0.4605, DF404_03=-1.4211, DF404_04=-1.5811, DF404_05=-0.3491, DF404_06=-0.4157, DF404_07=-0.5501, DF404_08=-0.4762, DF404_09=0.0064, DF404_10=0.0, DF404_11=0.0, DF404_12=0.0, DF404_13=0.0, DF404_14=0.0)>",
            "<RTCM(1097, DF002=1097, DF003=0, GNSSEpoch=204137001, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=216181732825628672, NSat=5, DF395=1073872896, NSig=2, DF396=1023, DF397_01=79, DF397_02=84, DF397_03=89, DF397_04=78, DF397_05=83, GNSSSpecific_01=0, GNSSSpecific_02=0, GNSSSpecific_03=0, GNSSSpecific_04=0, GNSSSpecific_05=0, DF398_01=0.15625, DF398_02=0.25097656, DF398_03=0.35449219, DF398_04=0.37109375, DF398_05=0.25976562, DF399_01=-198, DF399_02=-516, DF399_03=423, DF399_04=63, DF399_05=-384, DF405_01=-4.54e-05, DF405_02=-2.825e-05, DF405_03=-0.00034597, DF405_04=-0.00032683, DF405_05=0.00048097, DF405_06=0.00050125, DF405_07=-0.00013696, DF405_08=-0.00012604, DF405_09=-1.844e-05, DF405_10=-3.04e-06, DF406_01=-4.445e-05, DF406_02=-2.835e-05, DF406_03=-0.00035255, DF406_04=-0.00032637, DF406_05=0.00048204, DF406_06=0.00050084, DF406_07=-0.00013757, DF406_08=-0.00012636, DF406_09=-1.804e-05, DF406_10=-3.29e-06, DF407_01=341, DF407_02=341, DF407_03=341, DF407_04=341, DF407_05=341, DF407_06=341, DF407_07=341, DF407_08=341, DF407_09=341, DF407_10=341, DF420_01=0, DF420_02=0, DF420_03=0, DF420_04=0, DF420_05=0, DF420_06=0, DF420_07=0, DF420_08=0, DF420_09=0, DF420_10=0, DF408_01=11776, DF408_02=12544, DF408_03=10496, DF408_04=11008, DF408_05=11008, DF408_06=11008, DF408_07=11520, DF408_08=12544, DF408_09=11008, DF408_10=12032, DF404_01=-0.5806, DF404_02=-0.5831, DF404_03=-0.7947, DF404_04=-0.7943, DF404_05=0.7243, DF404_06=0.7174, DF404_07=0.5534, DF404_08=0.5545, DF404_09=-0.7726, DF404_10=-0.7733)>",
            "<RTCM(1127, DF002=1127, DF003=0, GNSSEpoch=204123001, DF393=0, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=198178247981137920, NSat=10, DF395=1074003968, NSig=2, DF396=387754, DF397_01=129, DF397_02=132, DF397_03=126, DF397_04=75, DF397_05=81, DF397_06=84, DF397_07=78, DF397_08=74, DF397_09=130, DF397_10=86, GNSSSpecific_01=0, GNSSSpecific_02=0, GNSSSpecific_03=0, GNSSSpecific_04=0, GNSSSpecific_05=0, GNSSSpecific_06=0, GNSSSpecific_07=0, GNSSSpecific_08=0, GNSSSpecific_09=0, GNSSSpecific_10=0, DF398_01=0.1171875, DF398_02=0.48144531, DF398_03=0.30957031, DF398_04=0.72558594, DF398_05=0.41015625, DF398_06=0.5703125, DF398_07=0.55957031, DF398_08=0.32226562, DF398_09=0.578125, DF398_10=0.67382812, DF399_01=-130, DF399_02=-58, DF399_03=-81, DF399_04=32, DF399_05=-398, DF399_06=436, DF399_07=-523, DF399_08=-65, DF399_09=-182, DF399_10=79, DF405_01=-0.00038854, DF405_02=0.0002273, DF405_03=0.00040366, DF405_04=0.00039607, DF405_05=-0.00016684, DF405_06=-4.755e-05, DF405_07=0.00036747, DF405_08=0.0002663, DF405_09=-0.00025026, DF405_10=-0.00011804, DF405_11=-0.00029377, DF405_12=-9.705e-05, DF405_13=-0.00060681, DF405_14=-7.59e-05, DF405_15=0.00076535, DF405_16=-1.958e-05, DF405_17=-0.00066777, DF405_18=-1.212e-05, DF405_19=0.00024992, DF405_20=0.00077083, DF406_01=0.00118631, DF406_02=0.00252339, DF406_03=-0.0017453, DF406_04=0.0027949, DF406_05=0.00260417, DF406_06=0.00260417, DF406_07=0.00260417, DF406_08=0.00260417, DF406_09=0.0019538, DF406_10=0.00220729, DF406_11=-0.00372297, DF406_12=0.00256628, DF406_13=4.2e-05, DF406_14=0.00080749, DF406_15=0.00038083, DF406_16=-0.00031753, DF406_17=-0.00283486, DF406_18=0.00330518, DF406_19=-0.00310773, DF406_20=-0.00117208, DF407_01=0, DF407_02=0, DF407_03=0, DF407_04=0, DF407_05=0, DF407_06=0, DF407_07=0, DF407_08=0, DF407_09=0, DF407_10=0, DF407_11=0, DF407_12=0, DF407_13=0, DF407_14=0, DF407_15=0, DF407_16=0, DF407_17=0, DF407_18=0, DF407_19=0, DF407_20=0, DF420_01=0, DF420_02=0, DF420_03=0, DF420_04=0, DF420_05=0, DF420_06=0, DF420_07=0, DF420_08=0, DF420_09=0, DF420_10=0, DF420_11=0, DF420_12=0, DF420_13=0, DF420_14=0, DF420_15=0, DF420_16=0, DF420_17=0, DF420_18=0, DF420_19=0, DF420_20=0, DF408_01=0, DF408_02=0, DF408_03=0, DF408_04=0, DF408_05=0, DF408_06=0, DF408_07=0, DF408_08=0, DF408_09=0, DF408_10=0, DF408_11=0, DF408_12=0, DF408_13=0, DF408_14=0, DF408_15=0, DF408_16=0, DF408_17=0, DF408_18=0, DF408_19=0, DF408_20=0, DF404_01=0.0, DF404_02=0.0, DF404_03=0.0, DF404_04=0.0, DF404_05=0.0, DF404_06=0.0, DF404_07=0.0, DF404_08=0.0, DF404_09=0.0, DF404_10=0.0, DF404_11=0.0, DF404_12=0.0, DF404_13=0.0, DF404_14=0.0, DF404_15=0.0, DF404_16=0.0, DF404_17=0.0, DF404_18=0.0, DF404_19=0.0, DF404_20=0.0)>",
            "<RTCM(1230, DF002=1230, DF003=0, DF421=1, DF001_3=0, DF422=0, )>",
            "<RTCM(1007, DF002=1007, DF003=1234, DF029=3, DF030_01=A, DF030_02=B, DF030_03=C, DF031=234)>",
            "<RTCM(1117, DF002=1117, DF003=0, GNSSEpoch=385820000, DF393=1, DF409=0, DF001_7=0, DF411=1, DF412=0, DF417=0, DF418=0, DF394=7061644215716937728, NSat=3, DF395=1073774849, NSig=4, DF396=4095, DF397_01=140, DF397_02=112, DF397_03=133, GNSSSpecific_01=0, GNSSSpecific_02=0, GNSSSpecific_03=0, DF398_01=0.171875, DF398_02=0.125, DF398_03=0.87207031, DF399_01=481, DF399_02=-28, DF399_03=1, DF405_01=0.00022634, DF405_02=0.00026302, DF405_03=0.00024538, DF405_04=0.00023027, DF405_05=-3.85e-05, DF405_06=-8.33e-06, DF405_07=-2.259e-05, DF405_08=-3.289e-05, DF405_09=-9.806e-05, DF405_10=-7.163e-05, DF405_11=-8.577e-05, DF405_12=-9.572e-05, DF406_01=-0.00021978, DF406_02=0.00050089, DF406_03=-3.95e-06, DF406_04=0.00022199, DF406_05=0.00039012, DF406_06=-0.00017093, DF406_07=-0.00016689, DF406_08=-0.00018814, DF406_09=0.00028417, DF406_10=-0.0001959, DF406_11=0.0002057, DF406_12=0.00017754, DF407_01=516, DF407_02=462, DF407_03=684, DF407_04=365, DF407_05=648, DF407_06=649, DF407_07=649, DF407_08=649, DF407_09=568, DF407_10=704, DF407_11=704, DF407_12=704, DF420_01=0, DF420_02=0, DF420_03=0, DF420_04=0, DF420_05=0, DF420_06=0, DF420_07=0, DF420_08=0, DF420_09=0, DF420_10=0, DF420_11=0, DF420_12=0, DF408_01=7760, DF408_02=9184, DF408_03=8832, DF408_04=8832, DF408_05=12448, DF408_06=12928, DF408_07=13472, DF408_08=13104, DF408_09=9808, DF408_10=11184, DF408_11=11728, DF408_12=10320, DF404_01=-0.1064, DF404_02=-1.6384, DF404_03=-1.6384, DF404_04=-1.6384, DF404_05=-0.5875, DF404_06=-1.6384, DF404_07=-1.6384, DF404_08=-1.6384, DF404_09=-0.413, DF404_10=-1.6384, DF404_11=-1.6384, DF404_12=-1.6384)>",
        )

        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-RTCM3.log"), "rb")
        i = 0
        raw = 0
        rtr = RTCMReader(stream, scaling=True, labelmsm=False)
        for raw, parsed in rtr:
            if raw is not None:
                self.assertEqual(str(parsed), EXPECTED_RESULTS[i])
                i += 1
        stream.close()

    def testMIXEDRTCM_SCALE_LABELMSM(
        self,
    ):  # test mixed stream of NMEA, UBX & RTCM messages with scaling and labelmsm applied
        EXPECTED_RESULTS = (
            "<RTCM(1005, DF002=1005, DF003=0, DF021=0, DF022=1, DF023=1, DF024=1, DF141=0, DF025=4444030.8028, DF142=1, DF001_1=0, DF026=3085671.2349, DF364=0, DF027=3366658.256)>",
            "<RTCM(4072, DF002=4072, Not_Yet_Implemented)>",
            "<RTCM(1077, DF002=1077, DF003=0, GNSSEpoch=204137001, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=760738918298550272, NSat=10, DF395=1073807360, NSig=2, DF396=1044459, DF397_01(005)=75, DF397_02(007)=75, DF397_03(009)=81, DF397_04(013)=72, DF397_05(014)=67, DF397_06(015)=80, DF397_07(017)=75, DF397_08(019)=82, DF397_09(020)=75, DF397_10(030)=71, GNSSSpecific_01(005)=0, GNSSSpecific_02(007)=0, GNSSSpecific_03(009)=0, GNSSSpecific_04(013)=0, GNSSSpecific_05(014)=0, GNSSSpecific_06(015)=0, GNSSSpecific_07(017)=0, GNSSSpecific_08(019)=0, GNSSSpecific_09(020)=0, GNSSSpecific_10(030)=0, DF398_01(005)=0.00585938, DF398_02(007)=0.53417969, DF398_03(009)=0.76269531, DF398_04(013)=0.13867188, DF398_05(014)=0.54980469, DF398_06(015)=0.11328125, DF398_07(017)=0.80371094, DF398_08(019)=0.10253906, DF398_09(020)=0.52148438, DF398_10(030)=0.34570312, DF399_01(005)=-178, DF399_02(007)=-304, DF399_03(009)=-643, DF399_04(013)=477, DF399_05(014)=-52, DF399_06(015)=645, DF399_07(017)=529, DF399_08(019)=643, DF399_09(020)=-428, DF399_10(030)=-181, DF405_01(005,1C)=0.00014309, DF405_02(005,2L)=0.00014183, DF405_03(007,1C)=0.00038833, DF405_04(007,2L)=0.00038741, DF405_05(009,1C)=-0.00048384, DF405_06(009,2L)=-0.00046884, DF405_07(013,1C)=0.00034787, DF405_08(013,n/a)=0.00021969, DF405_09(014,1C)=0.00021521, DF405_10(014,2L)=-0.00018852, DF405_11(015,1C)=-0.00018319, DF405_12(015,2L)=-0.00010088, DF405_13(017,1C)=-9.844e-05, DF405_14(017,2L)=0.00047875, DF405_15(019,1C)=0.00043665, DF405_16(019,n/a)=-0.00031057, DF405_17(020,1C)=-0.00030866, DF405_18(020,n/a)=3.548e-05, DF405_19(030,1C)=0.00012431, DF405_20(030,2L)=-0.00016747, DF406_01(005,1C)=-0.00247183, DF406_02(005,2L)=0.00097835, DF406_03(007,1C)=0.00030125, DF406_04(007,2L)=-0.00390617, DF406_05(009,1C)=0.00095563, DF406_06(009,2L)=0.00061994, DF406_07(013,1C)=0.00181956, DF406_08(013,n/a)=0.00139041, DF406_09(014,1C)=-0.00161936, DF406_10(014,2L)=-0.00306895, DF406_11(015,1C)=0.00010691, DF406_12(015,2L)=0.0034257, DF406_13(017,1C)=0.00296013, DF406_14(017,2L)=-0.00152405, DF406_15(019,1C)=1.399e-05, DF406_16(019,n/a)=0.00260417, DF406_17(020,1C)=0.00260417, DF406_18(020,n/a)=0.00260417, DF406_19(030,1C)=0.00260417, DF406_20(030,2L)=0.00260417, DF407_01(005,1C)=157, DF407_02(005,2L)=341, DF407_03(007,1C)=341, DF407_04(007,2L)=340, DF407_05(009,1C)=0, DF407_06(009,2L)=22, DF407_07(013,1C)=531, DF407_08(013,n/a)=21, DF407_09(014,1C)=531, DF407_10(014,2L)=531, DF407_11(015,1C)=530, DF407_12(015,2L)=534, DF407_13(017,1C)=535, DF407_14(017,2L)=23, DF407_15(019,1C)=19, DF407_16(019,n/a)=529, DF407_17(020,1C)=22, DF407_18(020,n/a)=531, DF407_19(030,1C)=15, DF407_20(030,2L)=534, DF420_01(005,1C)=1, DF420_02(005,2L)=0, DF420_03(007,1C)=0, DF420_04(007,2L)=0, DF420_05(009,1C)=0, DF420_06(009,2L)=1, DF420_07(013,1C)=0, DF420_08(013,n/a)=1, DF420_09(014,1C)=1, DF420_10(014,2L)=1, DF420_11(015,1C)=0, DF420_12(015,2L)=0, DF420_13(017,1C)=0, DF420_14(017,2L)=0, DF420_15(019,1C)=0, DF420_16(019,n/a)=1, DF420_17(020,1C)=0, DF420_18(020,n/a)=1, DF420_19(030,1C)=0, DF420_20(030,2L)=0, DF408_01(005,1C)=8544, DF408_02(005,2L)=16144, DF408_03(007,1C)=11776, DF408_04(007,2L)=11632, DF408_05(009,1C)=14320, DF408_06(009,2L)=12208, DF408_07(013,1C)=13744, DF408_08(013,n/a)=16208, DF408_09(014,1C)=14336, DF408_10(014,2L)=12320, DF408_11(015,1C)=6448, DF408_12(015,2L)=16032, DF408_13(017,1C)=6128, DF408_14(017,2L)=5440, DF408_15(019,1C)=4688, DF408_16(019,n/a)=7312, DF408_17(020,1C)=3216, DF408_18(020,n/a)=1184, DF408_19(030,1C)=8224, DF408_20(030,2L)=5888, DF404_01(005,1C)=0.6636, DF404_02(005,2L)=-0.9556, DF404_03(007,1C)=-0.2148, DF404_04(007,2L)=-0.2174, DF404_05(009,1C)=0.0, DF404_06(009,2L)=0.0, DF404_07(013,1C)=0.0, DF404_08(013,n/a)=0.0, DF404_09(014,1C)=0.0, DF404_10(014,2L)=0.0, DF404_11(015,1C)=0.0, DF404_12(015,2L)=0.0, DF404_13(017,1C)=0.0, DF404_14(017,2L)=0.0, DF404_15(019,1C)=0.0, DF404_16(019,n/a)=0.0, DF404_17(020,1C)=0.0, DF404_18(020,n/a)=0.0, DF404_19(030,1C)=0.0, DF404_20(030,2L)=0.0)>",
            "<RTCM(1087, DF002=1087, DF003=0, GNSSEpoch=310554457, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=4039168114821169152, NSat=7, DF395=1090519040, NSig=2, DF396=16382, DF397_01(003)=69, DF397_02(004)=64, DF397_03(005)=73, DF397_04(013)=76, DF397_05(014)=66, DF397_06(015)=70, DF397_07(023)=78, GNSSSpecific_01(003)=12, GNSSSpecific_02(004)=13, GNSSSpecific_03(005)=8, GNSSSpecific_04(013)=5, GNSSSpecific_05(014)=0, GNSSSpecific_06(015)=7, GNSSSpecific_07(023)=10, DF398_01(003)=0.63378906, DF398_02(004)=0.34277344, DF398_03(005)=0.25390625, DF398_04(013)=0.31054688, DF398_05(014)=0.51269531, DF398_06(015)=0.82714844, DF398_07(023)=0.88378906, DF399_01(003)=-665, DF399_02(004)=29, DF399_03(005)=672, DF399_04(013)=-573, DF399_05(014)=-211, DF399_06(015)=312, DF399_07(023)=317, DF405_01(003,1C)=0.00024936, DF405_02(003,2C)=0.00025116, DF405_03(004,1C)=-4.679e-05, DF405_04(004,2C)=-5.142e-05, DF405_05(005,1C)=1.114e-05, DF405_06(005,2C)=2.15e-05, DF405_07(013,1C)=0.00047079, DF405_08(013,2C)=0.0004795, DF405_09(014,1C)=-0.00038792, DF405_10(014,2C)=-0.00037604, DF405_11(015,1C)=0.00027718, DF405_12(015,2C)=0.00028714, DF405_13(023,1C)=-0.00023612, DF405_14(023,n/a)=6.234e-05, DF406_01(003,1C)=0.0019688, DF406_02(003,2C)=0.00341495, DF406_03(004,1C)=0.0024382, DF406_04(004,2C)=-0.00097587, DF406_05(005,1C)=0.00341933, DF406_06(005,2C)=0.00295908, DF406_07(013,1C)=-0.0024111, DF406_08(013,2C)=0.00388202, DF406_09(014,1C)=-0.00344146, DF406_10(014,2C)=-0.00291232, DF406_11(015,1C)=-0.00193512, DF406_12(015,2C)=0.00145003, DF406_13(023,1C)=-0.00276693, DF406_14(023,n/a)=0.00259653, DF407_01(003,1C)=341, DF407_02(003,2C)=341, DF407_03(004,1C)=325, DF407_04(004,2C)=341, DF407_05(005,1C)=341, DF407_06(005,2C)=341, DF407_07(013,1C)=341, DF407_08(013,2C)=341, DF407_09(014,1C)=320, DF407_10(014,2C)=1, DF407_11(015,1C)=481, DF407_12(015,2C)=257, DF407_13(023,1C)=481, DF407_14(023,n/a)=321, DF420_01(003,1C)=0, DF420_02(003,2C)=1, DF420_03(004,1C)=1, DF420_04(004,2C)=1, DF420_05(005,1C)=1, DF420_06(005,2C)=0, DF420_07(013,1C)=0, DF420_08(013,2C)=0, DF420_09(014,1C)=0, DF420_10(014,2C)=1, DF420_11(015,1C)=0, DF420_12(015,2C)=0, DF420_13(023,1C)=1, DF420_14(023,n/a)=1, DF408_01(003,1C)=8480, DF408_02(003,2C)=256, DF408_03(004,1C)=8576, DF408_04(004,2C)=336, DF408_05(005,1C)=8576, DF408_06(005,2C)=320, DF408_07(013,1C)=320, DF408_08(013,2C)=8560, DF408_09(014,1C)=16368, DF408_10(014,2C)=12288, DF408_11(015,1C)=9856, DF408_12(015,2C)=5552, DF408_13(023,1C)=4240, DF408_14(023,n/a)=10864, DF404_01(003,1C)=0.5287, DF404_02(003,2C)=0.4605, DF404_03(004,1C)=-1.4211, DF404_04(004,2C)=-1.5811, DF404_05(005,1C)=-0.3491, DF404_06(005,2C)=-0.4157, DF404_07(013,1C)=-0.5501, DF404_08(013,2C)=-0.4762, DF404_09(014,1C)=0.0064, DF404_10(014,2C)=0.0, DF404_11(015,1C)=0.0, DF404_12(015,2C)=0.0, DF404_13(023,1C)=0.0, DF404_14(023,n/a)=0.0)>",
            "<RTCM(1097, DF002=1097, DF003=0, GNSSEpoch=204137001, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=216181732825628672, NSat=5, DF395=1073872896, NSig=2, DF396=1023, DF397_01(007)=79, DF397_02(008)=84, DF397_03(021)=89, DF397_04(027)=78, DF397_05(030)=83, GNSSSpecific_01(007)=0, GNSSSpecific_02(008)=0, GNSSSpecific_03(021)=0, GNSSSpecific_04(027)=0, GNSSSpecific_05(030)=0, DF398_01(007)=0.15625, DF398_02(008)=0.25097656, DF398_03(021)=0.35449219, DF398_04(027)=0.37109375, DF398_05(030)=0.25976562, DF399_01(007)=-198, DF399_02(008)=-516, DF399_03(021)=423, DF399_04(027)=63, DF399_05(030)=-384, DF405_01(007,1C)=-4.54e-05, DF405_02(007,7Q)=-2.825e-05, DF405_03(008,1C)=-0.00034597, DF405_04(008,7Q)=-0.00032683, DF405_05(021,1C)=0.00048097, DF405_06(021,7Q)=0.00050125, DF405_07(027,1C)=-0.00013696, DF405_08(027,7Q)=-0.00012604, DF405_09(030,1C)=-1.844e-05, DF405_10(030,7Q)=-3.04e-06, DF406_01(007,1C)=-4.445e-05, DF406_02(007,7Q)=-2.835e-05, DF406_03(008,1C)=-0.00035255, DF406_04(008,7Q)=-0.00032637, DF406_05(021,1C)=0.00048204, DF406_06(021,7Q)=0.00050084, DF406_07(027,1C)=-0.00013757, DF406_08(027,7Q)=-0.00012636, DF406_09(030,1C)=-1.804e-05, DF406_10(030,7Q)=-3.29e-06, DF407_01(007,1C)=341, DF407_02(007,7Q)=341, DF407_03(008,1C)=341, DF407_04(008,7Q)=341, DF407_05(021,1C)=341, DF407_06(021,7Q)=341, DF407_07(027,1C)=341, DF407_08(027,7Q)=341, DF407_09(030,1C)=341, DF407_10(030,7Q)=341, DF420_01(007,1C)=0, DF420_02(007,7Q)=0, DF420_03(008,1C)=0, DF420_04(008,7Q)=0, DF420_05(021,1C)=0, DF420_06(021,7Q)=0, DF420_07(027,1C)=0, DF420_08(027,7Q)=0, DF420_09(030,1C)=0, DF420_10(030,7Q)=0, DF408_01(007,1C)=11776, DF408_02(007,7Q)=12544, DF408_03(008,1C)=10496, DF408_04(008,7Q)=11008, DF408_05(021,1C)=11008, DF408_06(021,7Q)=11008, DF408_07(027,1C)=11520, DF408_08(027,7Q)=12544, DF408_09(030,1C)=11008, DF408_10(030,7Q)=12032, DF404_01(007,1C)=-0.5806, DF404_02(007,7Q)=-0.5831, DF404_03(008,1C)=-0.7947, DF404_04(008,7Q)=-0.7943, DF404_05(021,1C)=0.7243, DF404_06(021,7Q)=0.7174, DF404_07(027,1C)=0.5534, DF404_08(027,7Q)=0.5545, DF404_09(030,1C)=-0.7726, DF404_10(030,7Q)=-0.7733)>",
            "<RTCM(1127, DF002=1127, DF003=0, GNSSEpoch=204123001, DF393=0, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=198178247981137920, NSat=10, DF395=1074003968, NSig=2, DF396=387754, DF397_01(007)=129, DF397_02(009)=132, DF397_03(010)=126, DF397_04(020)=75, DF397_05(023)=81, DF397_06(028)=84, DF397_07(032)=78, DF397_08(037)=74, DF397_09(040)=130, DF397_10(043)=86, GNSSSpecific_01(007)=0, GNSSSpecific_02(009)=0, GNSSSpecific_03(010)=0, GNSSSpecific_04(020)=0, GNSSSpecific_05(023)=0, GNSSSpecific_06(028)=0, GNSSSpecific_07(032)=0, GNSSSpecific_08(037)=0, GNSSSpecific_09(040)=0, GNSSSpecific_10(043)=0, DF398_01(007)=0.1171875, DF398_02(009)=0.48144531, DF398_03(010)=0.30957031, DF398_04(020)=0.72558594, DF398_05(023)=0.41015625, DF398_06(028)=0.5703125, DF398_07(032)=0.55957031, DF398_08(037)=0.32226562, DF398_09(040)=0.578125, DF398_10(043)=0.67382812, DF399_01(007)=-130, DF399_02(009)=-58, DF399_03(010)=-81, DF399_04(020)=32, DF399_05(023)=-398, DF399_06(028)=436, DF399_07(032)=-523, DF399_08(037)=-65, DF399_09(040)=-182, DF399_10(043)=79, DF405_01(007,n/a)=-0.00038854, DF405_02(007,7I)=0.0002273, DF405_03(009,n/a)=0.00040366, DF405_04(009,7I)=0.00039607, DF405_05(010,2I)=-0.00016684, DF405_06(010,7I)=-4.755e-05, DF405_07(020,2I)=0.00036747, DF405_08(020,n/a)=0.0002663, DF405_09(023,2I)=-0.00025026, DF405_10(023,n/a)=-0.00011804, DF405_11(028,2I)=-0.00029377, DF405_12(028,n/a)=-9.705e-05, DF405_13(032,2I)=-0.00060681, DF405_14(032,n/a)=-7.59e-05, DF405_15(037,2I)=0.00076535, DF405_16(037,n/a)=-1.958e-05, DF405_17(040,2I)=-0.00066777, DF405_18(040,n/a)=-1.212e-05, DF405_19(043,2I)=0.00024992, DF405_20(043,n/a)=0.00077083, DF406_01(007,n/a)=0.00118631, DF406_02(007,7I)=0.00252339, DF406_03(009,n/a)=-0.0017453, DF406_04(009,7I)=0.0027949, DF406_05(010,2I)=0.00260417, DF406_06(010,7I)=0.00260417, DF406_07(020,2I)=0.00260417, DF406_08(020,n/a)=0.00260417, DF406_09(023,2I)=0.0019538, DF406_10(023,n/a)=0.00220729, DF406_11(028,2I)=-0.00372297, DF406_12(028,n/a)=0.00256628, DF406_13(032,2I)=4.2e-05, DF406_14(032,n/a)=0.00080749, DF406_15(037,2I)=0.00038083, DF406_16(037,n/a)=-0.00031753, DF406_17(040,2I)=-0.00283486, DF406_18(040,n/a)=0.00330518, DF406_19(043,2I)=-0.00310773, DF406_20(043,n/a)=-0.00117208, DF407_01(007,n/a)=0, DF407_02(007,7I)=0, DF407_03(009,n/a)=0, DF407_04(009,7I)=0, DF407_05(010,2I)=0, DF407_06(010,7I)=0, DF407_07(020,2I)=0, DF407_08(020,n/a)=0, DF407_09(023,2I)=0, DF407_10(023,n/a)=0, DF407_11(028,2I)=0, DF407_12(028,n/a)=0, DF407_13(032,2I)=0, DF407_14(032,n/a)=0, DF407_15(037,2I)=0, DF407_16(037,n/a)=0, DF407_17(040,2I)=0, DF407_18(040,n/a)=0, DF407_19(043,2I)=0, DF407_20(043,n/a)=0, DF420_01(007,n/a)=0, DF420_02(007,7I)=0, DF420_03(009,n/a)=0, DF420_04(009,7I)=0, DF420_05(010,2I)=0, DF420_06(010,7I)=0, DF420_07(020,2I)=0, DF420_08(020,n/a)=0, DF420_09(023,2I)=0, DF420_10(023,n/a)=0, DF420_11(028,2I)=0, DF420_12(028,n/a)=0, DF420_13(032,2I)=0, DF420_14(032,n/a)=0, DF420_15(037,2I)=0, DF420_16(037,n/a)=0, DF420_17(040,2I)=0, DF420_18(040,n/a)=0, DF420_19(043,2I)=0, DF420_20(043,n/a)=0, DF408_01(007,n/a)=0, DF408_02(007,7I)=0, DF408_03(009,n/a)=0, DF408_04(009,7I)=0, DF408_05(010,2I)=0, DF408_06(010,7I)=0, DF408_07(020,2I)=0, DF408_08(020,n/a)=0, DF408_09(023,2I)=0, DF408_10(023,n/a)=0, DF408_11(028,2I)=0, DF408_12(028,n/a)=0, DF408_13(032,2I)=0, DF408_14(032,n/a)=0, DF408_15(037,2I)=0, DF408_16(037,n/a)=0, DF408_17(040,2I)=0, DF408_18(040,n/a)=0, DF408_19(043,2I)=0, DF408_20(043,n/a)=0, DF404_01(007,n/a)=0.0, DF404_02(007,7I)=0.0, DF404_03(009,n/a)=0.0, DF404_04(009,7I)=0.0, DF404_05(010,2I)=0.0, DF404_06(010,7I)=0.0, DF404_07(020,2I)=0.0, DF404_08(020,n/a)=0.0, DF404_09(023,2I)=0.0, DF404_10(023,n/a)=0.0, DF404_11(028,2I)=0.0, DF404_12(028,n/a)=0.0, DF404_13(032,2I)=0.0, DF404_14(032,n/a)=0.0, DF404_15(037,2I)=0.0, DF404_16(037,n/a)=0.0, DF404_17(040,2I)=0.0, DF404_18(040,n/a)=0.0, DF404_19(043,2I)=0.0, DF404_20(043,n/a)=0.0)>",
            "<RTCM(1230, DF002=1230, DF003=0, DF421=1, DF001_3=0, DF422=0, )>",
            "<RTCM(1007, DF002=1007, DF003=1234, DF029=3, DF030_01=A, DF030_02=B, DF030_03=C, DF031=234)>",
            "<RTCM(1117, DF002=1117, DF003=0, GNSSEpoch=385820000, DF393=1, DF409=0, DF001_7=0, DF411=1, DF412=0, DF417=0, DF418=0, DF394=7061644215716937728, NSat=3, DF395=1073774849, NSig=4, DF396=4095, DF397_01(194)=140, DF397_02(195)=112, DF397_03(199)=133, GNSSSpecific_01(194)=0, GNSSSpecific_02(195)=0, GNSSSpecific_03(199)=0, DF398_01(194)=0.171875, DF398_02(195)=0.125, DF398_03(199)=0.87207031, DF399_01(194)=481, DF399_02(195)=-28, DF399_03(199)=1, DF405_01(194,1C)=0.00022634, DF405_02(194,2X)=0.00026302, DF405_03(194,5X)=0.00024538, DF405_04(194,1X)=0.00023027, DF405_05(195,1C)=-3.85e-05, DF405_06(195,2X)=-8.33e-06, DF405_07(195,5X)=-2.259e-05, DF405_08(195,1X)=-3.289e-05, DF405_09(199,1C)=-9.806e-05, DF405_10(199,2X)=-7.163e-05, DF405_11(199,5X)=-8.577e-05, DF405_12(199,1X)=-9.572e-05, DF406_01(194,1C)=-0.00021978, DF406_02(194,2X)=0.00050089, DF406_03(194,5X)=-3.95e-06, DF406_04(194,1X)=0.00022199, DF406_05(195,1C)=0.00039012, DF406_06(195,2X)=-0.00017093, DF406_07(195,5X)=-0.00016689, DF406_08(195,1X)=-0.00018814, DF406_09(199,1C)=0.00028417, DF406_10(199,2X)=-0.0001959, DF406_11(199,5X)=0.0002057, DF406_12(199,1X)=0.00017754, DF407_01(194,1C)=516, DF407_02(194,2X)=462, DF407_03(194,5X)=684, DF407_04(194,1X)=365, DF407_05(195,1C)=648, DF407_06(195,2X)=649, DF407_07(195,5X)=649, DF407_08(195,1X)=649, DF407_09(199,1C)=568, DF407_10(199,2X)=704, DF407_11(199,5X)=704, DF407_12(199,1X)=704, DF420_01(194,1C)=0, DF420_02(194,2X)=0, DF420_03(194,5X)=0, DF420_04(194,1X)=0, DF420_05(195,1C)=0, DF420_06(195,2X)=0, DF420_07(195,5X)=0, DF420_08(195,1X)=0, DF420_09(199,1C)=0, DF420_10(199,2X)=0, DF420_11(199,5X)=0, DF420_12(199,1X)=0, DF408_01(194,1C)=7760, DF408_02(194,2X)=9184, DF408_03(194,5X)=8832, DF408_04(194,1X)=8832, DF408_05(195,1C)=12448, DF408_06(195,2X)=12928, DF408_07(195,5X)=13472, DF408_08(195,1X)=13104, DF408_09(199,1C)=9808, DF408_10(199,2X)=11184, DF408_11(199,5X)=11728, DF408_12(199,1X)=10320, DF404_01(194,1C)=-0.1064, DF404_02(194,2X)=-1.6384, DF404_03(194,5X)=-1.6384, DF404_04(194,1X)=-1.6384, DF404_05(195,1C)=-0.5875, DF404_06(195,2X)=-1.6384, DF404_07(195,5X)=-1.6384, DF404_08(195,1X)=-1.6384, DF404_09(199,1C)=-0.413, DF404_10(199,2X)=-1.6384, DF404_11(199,5X)=-1.6384, DF404_12(199,1X)=-1.6384)>",
        )

        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-RTCM3.log"), "rb")
        i = 0
        raw = 0
        rtr = RTCMReader(stream, scaling=True, labelmsm=True)
        d = rtr.datastream
        for raw, parsed in rtr:
            if raw is not None:
                self.assertEqual(str(parsed), EXPECTED_RESULTS[i])
                i += 1
        stream.close()

    def testMIXEDRTCM_ITERATOR(
        self,
    ):  # test mixed stream of NMEA, UBX & RTCM messages with iterator()
        EXPECTED_RESULTS = (
            "<RTCM(1005, DF002=1005, DF003=0, DF021=0, DF022=1, DF023=1, DF024=1, DF141=0, DF025=4444030.8028, DF142=1, DF001_1=0, DF026=3085671.2349, DF364=0, DF027=3366658.256)>",
            "<RTCM(4072, DF002=4072, Not_Yet_Implemented)>",
            "<RTCM(1077, DF002=1077, DF003=0, GNSSEpoch=204137001, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=760738918298550272, NSat=10, DF395=1073807360, NSig=2, DF396=1044459, DF397_01(005)=75, DF397_02(007)=75, DF397_03(009)=81, DF397_04(013)=72, DF397_05(014)=67, DF397_06(015)=80, DF397_07(017)=75, DF397_08(019)=82, DF397_09(020)=75, DF397_10(030)=71, GNSSSpecific_01(005)=0, GNSSSpecific_02(007)=0, GNSSSpecific_03(009)=0, GNSSSpecific_04(013)=0, GNSSSpecific_05(014)=0, GNSSSpecific_06(015)=0, GNSSSpecific_07(017)=0, GNSSSpecific_08(019)=0, GNSSSpecific_09(020)=0, GNSSSpecific_10(030)=0, DF398_01(005)=0.00585938, DF398_02(007)=0.53417969, DF398_03(009)=0.76269531, DF398_04(013)=0.13867188, DF398_05(014)=0.54980469, DF398_06(015)=0.11328125, DF398_07(017)=0.80371094, DF398_08(019)=0.10253906, DF398_09(020)=0.52148438, DF398_10(030)=0.34570312, DF399_01(005)=-178, DF399_02(007)=-304, DF399_03(009)=-643, DF399_04(013)=477, DF399_05(014)=-52, DF399_06(015)=645, DF399_07(017)=529, DF399_08(019)=643, DF399_09(020)=-428, DF399_10(030)=-181, DF405_01(005,1C)=0.00014309, DF405_02(005,2L)=0.00014183, DF405_03(007,1C)=0.00038833, DF405_04(007,2L)=0.00038741, DF405_05(009,1C)=-0.00048384, DF405_06(009,2L)=-0.00046884, DF405_07(013,1C)=0.00034787, DF405_08(013,n/a)=0.00021969, DF405_09(014,1C)=0.00021521, DF405_10(014,2L)=-0.00018852, DF405_11(015,1C)=-0.00018319, DF405_12(015,2L)=-0.00010088, DF405_13(017,1C)=-9.844e-05, DF405_14(017,2L)=0.00047875, DF405_15(019,1C)=0.00043665, DF405_16(019,n/a)=-0.00031057, DF405_17(020,1C)=-0.00030866, DF405_18(020,n/a)=3.548e-05, DF405_19(030,1C)=0.00012431, DF405_20(030,2L)=-0.00016747, DF406_01(005,1C)=-0.00247183, DF406_02(005,2L)=0.00097835, DF406_03(007,1C)=0.00030125, DF406_04(007,2L)=-0.00390617, DF406_05(009,1C)=0.00095563, DF406_06(009,2L)=0.00061994, DF406_07(013,1C)=0.00181956, DF406_08(013,n/a)=0.00139041, DF406_09(014,1C)=-0.00161936, DF406_10(014,2L)=-0.00306895, DF406_11(015,1C)=0.00010691, DF406_12(015,2L)=0.0034257, DF406_13(017,1C)=0.00296013, DF406_14(017,2L)=-0.00152405, DF406_15(019,1C)=1.399e-05, DF406_16(019,n/a)=0.00260417, DF406_17(020,1C)=0.00260417, DF406_18(020,n/a)=0.00260417, DF406_19(030,1C)=0.00260417, DF406_20(030,2L)=0.00260417, DF407_01(005,1C)=157, DF407_02(005,2L)=341, DF407_03(007,1C)=341, DF407_04(007,2L)=340, DF407_05(009,1C)=0, DF407_06(009,2L)=22, DF407_07(013,1C)=531, DF407_08(013,n/a)=21, DF407_09(014,1C)=531, DF407_10(014,2L)=531, DF407_11(015,1C)=530, DF407_12(015,2L)=534, DF407_13(017,1C)=535, DF407_14(017,2L)=23, DF407_15(019,1C)=19, DF407_16(019,n/a)=529, DF407_17(020,1C)=22, DF407_18(020,n/a)=531, DF407_19(030,1C)=15, DF407_20(030,2L)=534, DF420_01(005,1C)=1, DF420_02(005,2L)=0, DF420_03(007,1C)=0, DF420_04(007,2L)=0, DF420_05(009,1C)=0, DF420_06(009,2L)=1, DF420_07(013,1C)=0, DF420_08(013,n/a)=1, DF420_09(014,1C)=1, DF420_10(014,2L)=1, DF420_11(015,1C)=0, DF420_12(015,2L)=0, DF420_13(017,1C)=0, DF420_14(017,2L)=0, DF420_15(019,1C)=0, DF420_16(019,n/a)=1, DF420_17(020,1C)=0, DF420_18(020,n/a)=1, DF420_19(030,1C)=0, DF420_20(030,2L)=0, DF408_01(005,1C)=8544, DF408_02(005,2L)=16144, DF408_03(007,1C)=11776, DF408_04(007,2L)=11632, DF408_05(009,1C)=14320, DF408_06(009,2L)=12208, DF408_07(013,1C)=13744, DF408_08(013,n/a)=16208, DF408_09(014,1C)=14336, DF408_10(014,2L)=12320, DF408_11(015,1C)=6448, DF408_12(015,2L)=16032, DF408_13(017,1C)=6128, DF408_14(017,2L)=5440, DF408_15(019,1C)=4688, DF408_16(019,n/a)=7312, DF408_17(020,1C)=3216, DF408_18(020,n/a)=1184, DF408_19(030,1C)=8224, DF408_20(030,2L)=5888, DF404_01(005,1C)=0.6636, DF404_02(005,2L)=-0.9556, DF404_03(007,1C)=-0.2148, DF404_04(007,2L)=-0.2174, DF404_05(009,1C)=0.0, DF404_06(009,2L)=0.0, DF404_07(013,1C)=0.0, DF404_08(013,n/a)=0.0, DF404_09(014,1C)=0.0, DF404_10(014,2L)=0.0, DF404_11(015,1C)=0.0, DF404_12(015,2L)=0.0, DF404_13(017,1C)=0.0, DF404_14(017,2L)=0.0, DF404_15(019,1C)=0.0, DF404_16(019,n/a)=0.0, DF404_17(020,1C)=0.0, DF404_18(020,n/a)=0.0, DF404_19(030,1C)=0.0, DF404_20(030,2L)=0.0)>",
            "<RTCM(1087, DF002=1087, DF003=0, GNSSEpoch=310554457, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=4039168114821169152, NSat=7, DF395=1090519040, NSig=2, DF396=16382, DF397_01(003)=69, DF397_02(004)=64, DF397_03(005)=73, DF397_04(013)=76, DF397_05(014)=66, DF397_06(015)=70, DF397_07(023)=78, GNSSSpecific_01(003)=12, GNSSSpecific_02(004)=13, GNSSSpecific_03(005)=8, GNSSSpecific_04(013)=5, GNSSSpecific_05(014)=0, GNSSSpecific_06(015)=7, GNSSSpecific_07(023)=10, DF398_01(003)=0.63378906, DF398_02(004)=0.34277344, DF398_03(005)=0.25390625, DF398_04(013)=0.31054688, DF398_05(014)=0.51269531, DF398_06(015)=0.82714844, DF398_07(023)=0.88378906, DF399_01(003)=-665, DF399_02(004)=29, DF399_03(005)=672, DF399_04(013)=-573, DF399_05(014)=-211, DF399_06(015)=312, DF399_07(023)=317, DF405_01(003,1C)=0.00024936, DF405_02(003,2C)=0.00025116, DF405_03(004,1C)=-4.679e-05, DF405_04(004,2C)=-5.142e-05, DF405_05(005,1C)=1.114e-05, DF405_06(005,2C)=2.15e-05, DF405_07(013,1C)=0.00047079, DF405_08(013,2C)=0.0004795, DF405_09(014,1C)=-0.00038792, DF405_10(014,2C)=-0.00037604, DF405_11(015,1C)=0.00027718, DF405_12(015,2C)=0.00028714, DF405_13(023,1C)=-0.00023612, DF405_14(023,n/a)=6.234e-05, DF406_01(003,1C)=0.0019688, DF406_02(003,2C)=0.00341495, DF406_03(004,1C)=0.0024382, DF406_04(004,2C)=-0.00097587, DF406_05(005,1C)=0.00341933, DF406_06(005,2C)=0.00295908, DF406_07(013,1C)=-0.0024111, DF406_08(013,2C)=0.00388202, DF406_09(014,1C)=-0.00344146, DF406_10(014,2C)=-0.00291232, DF406_11(015,1C)=-0.00193512, DF406_12(015,2C)=0.00145003, DF406_13(023,1C)=-0.00276693, DF406_14(023,n/a)=0.00259653, DF407_01(003,1C)=341, DF407_02(003,2C)=341, DF407_03(004,1C)=325, DF407_04(004,2C)=341, DF407_05(005,1C)=341, DF407_06(005,2C)=341, DF407_07(013,1C)=341, DF407_08(013,2C)=341, DF407_09(014,1C)=320, DF407_10(014,2C)=1, DF407_11(015,1C)=481, DF407_12(015,2C)=257, DF407_13(023,1C)=481, DF407_14(023,n/a)=321, DF420_01(003,1C)=0, DF420_02(003,2C)=1, DF420_03(004,1C)=1, DF420_04(004,2C)=1, DF420_05(005,1C)=1, DF420_06(005,2C)=0, DF420_07(013,1C)=0, DF420_08(013,2C)=0, DF420_09(014,1C)=0, DF420_10(014,2C)=1, DF420_11(015,1C)=0, DF420_12(015,2C)=0, DF420_13(023,1C)=1, DF420_14(023,n/a)=1, DF408_01(003,1C)=8480, DF408_02(003,2C)=256, DF408_03(004,1C)=8576, DF408_04(004,2C)=336, DF408_05(005,1C)=8576, DF408_06(005,2C)=320, DF408_07(013,1C)=320, DF408_08(013,2C)=8560, DF408_09(014,1C)=16368, DF408_10(014,2C)=12288, DF408_11(015,1C)=9856, DF408_12(015,2C)=5552, DF408_13(023,1C)=4240, DF408_14(023,n/a)=10864, DF404_01(003,1C)=0.5287, DF404_02(003,2C)=0.4605, DF404_03(004,1C)=-1.4211, DF404_04(004,2C)=-1.5811, DF404_05(005,1C)=-0.3491, DF404_06(005,2C)=-0.4157, DF404_07(013,1C)=-0.5501, DF404_08(013,2C)=-0.4762, DF404_09(014,1C)=0.0064, DF404_10(014,2C)=0.0, DF404_11(015,1C)=0.0, DF404_12(015,2C)=0.0, DF404_13(023,1C)=0.0, DF404_14(023,n/a)=0.0)>",
            "<RTCM(1097, DF002=1097, DF003=0, GNSSEpoch=204137001, DF393=1, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=216181732825628672, NSat=5, DF395=1073872896, NSig=2, DF396=1023, DF397_01(007)=79, DF397_02(008)=84, DF397_03(021)=89, DF397_04(027)=78, DF397_05(030)=83, GNSSSpecific_01(007)=0, GNSSSpecific_02(008)=0, GNSSSpecific_03(021)=0, GNSSSpecific_04(027)=0, GNSSSpecific_05(030)=0, DF398_01(007)=0.15625, DF398_02(008)=0.25097656, DF398_03(021)=0.35449219, DF398_04(027)=0.37109375, DF398_05(030)=0.25976562, DF399_01(007)=-198, DF399_02(008)=-516, DF399_03(021)=423, DF399_04(027)=63, DF399_05(030)=-384, DF405_01(007,1C)=-4.54e-05, DF405_02(007,7Q)=-2.825e-05, DF405_03(008,1C)=-0.00034597, DF405_04(008,7Q)=-0.00032683, DF405_05(021,1C)=0.00048097, DF405_06(021,7Q)=0.00050125, DF405_07(027,1C)=-0.00013696, DF405_08(027,7Q)=-0.00012604, DF405_09(030,1C)=-1.844e-05, DF405_10(030,7Q)=-3.04e-06, DF406_01(007,1C)=-4.445e-05, DF406_02(007,7Q)=-2.835e-05, DF406_03(008,1C)=-0.00035255, DF406_04(008,7Q)=-0.00032637, DF406_05(021,1C)=0.00048204, DF406_06(021,7Q)=0.00050084, DF406_07(027,1C)=-0.00013757, DF406_08(027,7Q)=-0.00012636, DF406_09(030,1C)=-1.804e-05, DF406_10(030,7Q)=-3.29e-06, DF407_01(007,1C)=341, DF407_02(007,7Q)=341, DF407_03(008,1C)=341, DF407_04(008,7Q)=341, DF407_05(021,1C)=341, DF407_06(021,7Q)=341, DF407_07(027,1C)=341, DF407_08(027,7Q)=341, DF407_09(030,1C)=341, DF407_10(030,7Q)=341, DF420_01(007,1C)=0, DF420_02(007,7Q)=0, DF420_03(008,1C)=0, DF420_04(008,7Q)=0, DF420_05(021,1C)=0, DF420_06(021,7Q)=0, DF420_07(027,1C)=0, DF420_08(027,7Q)=0, DF420_09(030,1C)=0, DF420_10(030,7Q)=0, DF408_01(007,1C)=11776, DF408_02(007,7Q)=12544, DF408_03(008,1C)=10496, DF408_04(008,7Q)=11008, DF408_05(021,1C)=11008, DF408_06(021,7Q)=11008, DF408_07(027,1C)=11520, DF408_08(027,7Q)=12544, DF408_09(030,1C)=11008, DF408_10(030,7Q)=12032, DF404_01(007,1C)=-0.5806, DF404_02(007,7Q)=-0.5831, DF404_03(008,1C)=-0.7947, DF404_04(008,7Q)=-0.7943, DF404_05(021,1C)=0.7243, DF404_06(021,7Q)=0.7174, DF404_07(027,1C)=0.5534, DF404_08(027,7Q)=0.5545, DF404_09(030,1C)=-0.7726, DF404_10(030,7Q)=-0.7733)>",
            "<RTCM(1127, DF002=1127, DF003=0, GNSSEpoch=204123001, DF393=0, DF409=0, DF001_7=0, DF411=0, DF412=0, DF417=0, DF418=0, DF394=198178247981137920, NSat=10, DF395=1074003968, NSig=2, DF396=387754, DF397_01(007)=129, DF397_02(009)=132, DF397_03(010)=126, DF397_04(020)=75, DF397_05(023)=81, DF397_06(028)=84, DF397_07(032)=78, DF397_08(037)=74, DF397_09(040)=130, DF397_10(043)=86, GNSSSpecific_01(007)=0, GNSSSpecific_02(009)=0, GNSSSpecific_03(010)=0, GNSSSpecific_04(020)=0, GNSSSpecific_05(023)=0, GNSSSpecific_06(028)=0, GNSSSpecific_07(032)=0, GNSSSpecific_08(037)=0, GNSSSpecific_09(040)=0, GNSSSpecific_10(043)=0, DF398_01(007)=0.1171875, DF398_02(009)=0.48144531, DF398_03(010)=0.30957031, DF398_04(020)=0.72558594, DF398_05(023)=0.41015625, DF398_06(028)=0.5703125, DF398_07(032)=0.55957031, DF398_08(037)=0.32226562, DF398_09(040)=0.578125, DF398_10(043)=0.67382812, DF399_01(007)=-130, DF399_02(009)=-58, DF399_03(010)=-81, DF399_04(020)=32, DF399_05(023)=-398, DF399_06(028)=436, DF399_07(032)=-523, DF399_08(037)=-65, DF399_09(040)=-182, DF399_10(043)=79, DF405_01(007,n/a)=-0.00038854, DF405_02(007,7I)=0.0002273, DF405_03(009,n/a)=0.00040366, DF405_04(009,7I)=0.00039607, DF405_05(010,2I)=-0.00016684, DF405_06(010,7I)=-4.755e-05, DF405_07(020,2I)=0.00036747, DF405_08(020,n/a)=0.0002663, DF405_09(023,2I)=-0.00025026, DF405_10(023,n/a)=-0.00011804, DF405_11(028,2I)=-0.00029377, DF405_12(028,n/a)=-9.705e-05, DF405_13(032,2I)=-0.00060681, DF405_14(032,n/a)=-7.59e-05, DF405_15(037,2I)=0.00076535, DF405_16(037,n/a)=-1.958e-05, DF405_17(040,2I)=-0.00066777, DF405_18(040,n/a)=-1.212e-05, DF405_19(043,2I)=0.00024992, DF405_20(043,n/a)=0.00077083, DF406_01(007,n/a)=0.00118631, DF406_02(007,7I)=0.00252339, DF406_03(009,n/a)=-0.0017453, DF406_04(009,7I)=0.0027949, DF406_05(010,2I)=0.00260417, DF406_06(010,7I)=0.00260417, DF406_07(020,2I)=0.00260417, DF406_08(020,n/a)=0.00260417, DF406_09(023,2I)=0.0019538, DF406_10(023,n/a)=0.00220729, DF406_11(028,2I)=-0.00372297, DF406_12(028,n/a)=0.00256628, DF406_13(032,2I)=4.2e-05, DF406_14(032,n/a)=0.00080749, DF406_15(037,2I)=0.00038083, DF406_16(037,n/a)=-0.00031753, DF406_17(040,2I)=-0.00283486, DF406_18(040,n/a)=0.00330518, DF406_19(043,2I)=-0.00310773, DF406_20(043,n/a)=-0.00117208, DF407_01(007,n/a)=0, DF407_02(007,7I)=0, DF407_03(009,n/a)=0, DF407_04(009,7I)=0, DF407_05(010,2I)=0, DF407_06(010,7I)=0, DF407_07(020,2I)=0, DF407_08(020,n/a)=0, DF407_09(023,2I)=0, DF407_10(023,n/a)=0, DF407_11(028,2I)=0, DF407_12(028,n/a)=0, DF407_13(032,2I)=0, DF407_14(032,n/a)=0, DF407_15(037,2I)=0, DF407_16(037,n/a)=0, DF407_17(040,2I)=0, DF407_18(040,n/a)=0, DF407_19(043,2I)=0, DF407_20(043,n/a)=0, DF420_01(007,n/a)=0, DF420_02(007,7I)=0, DF420_03(009,n/a)=0, DF420_04(009,7I)=0, DF420_05(010,2I)=0, DF420_06(010,7I)=0, DF420_07(020,2I)=0, DF420_08(020,n/a)=0, DF420_09(023,2I)=0, DF420_10(023,n/a)=0, DF420_11(028,2I)=0, DF420_12(028,n/a)=0, DF420_13(032,2I)=0, DF420_14(032,n/a)=0, DF420_15(037,2I)=0, DF420_16(037,n/a)=0, DF420_17(040,2I)=0, DF420_18(040,n/a)=0, DF420_19(043,2I)=0, DF420_20(043,n/a)=0, DF408_01(007,n/a)=0, DF408_02(007,7I)=0, DF408_03(009,n/a)=0, DF408_04(009,7I)=0, DF408_05(010,2I)=0, DF408_06(010,7I)=0, DF408_07(020,2I)=0, DF408_08(020,n/a)=0, DF408_09(023,2I)=0, DF408_10(023,n/a)=0, DF408_11(028,2I)=0, DF408_12(028,n/a)=0, DF408_13(032,2I)=0, DF408_14(032,n/a)=0, DF408_15(037,2I)=0, DF408_16(037,n/a)=0, DF408_17(040,2I)=0, DF408_18(040,n/a)=0, DF408_19(043,2I)=0, DF408_20(043,n/a)=0, DF404_01(007,n/a)=0.0, DF404_02(007,7I)=0.0, DF404_03(009,n/a)=0.0, DF404_04(009,7I)=0.0, DF404_05(010,2I)=0.0, DF404_06(010,7I)=0.0, DF404_07(020,2I)=0.0, DF404_08(020,n/a)=0.0, DF404_09(023,2I)=0.0, DF404_10(023,n/a)=0.0, DF404_11(028,2I)=0.0, DF404_12(028,n/a)=0.0, DF404_13(032,2I)=0.0, DF404_14(032,n/a)=0.0, DF404_15(037,2I)=0.0, DF404_16(037,n/a)=0.0, DF404_17(040,2I)=0.0, DF404_18(040,n/a)=0.0, DF404_19(043,2I)=0.0, DF404_20(043,n/a)=0.0)>",
            "<RTCM(1230, DF002=1230, DF003=0, DF421=1, DF001_3=0, DF422=0, )>",
            "<RTCM(1007, DF002=1007, DF003=1234, DF029=3, DF030_01=A, DF030_02=B, DF030_03=C, DF031=234)>",
            "<RTCM(1117, DF002=1117, DF003=0, GNSSEpoch=385820000, DF393=1, DF409=0, DF001_7=0, DF411=1, DF412=0, DF417=0, DF418=0, DF394=7061644215716937728, NSat=3, DF395=1073774849, NSig=4, DF396=4095, DF397_01(194)=140, DF397_02(195)=112, DF397_03(199)=133, GNSSSpecific_01(194)=0, GNSSSpecific_02(195)=0, GNSSSpecific_03(199)=0, DF398_01(194)=0.171875, DF398_02(195)=0.125, DF398_03(199)=0.87207031, DF399_01(194)=481, DF399_02(195)=-28, DF399_03(199)=1, DF405_01(194,1C)=0.00022634, DF405_02(194,2X)=0.00026302, DF405_03(194,5X)=0.00024538, DF405_04(194,1X)=0.00023027, DF405_05(195,1C)=-3.85e-05, DF405_06(195,2X)=-8.33e-06, DF405_07(195,5X)=-2.259e-05, DF405_08(195,1X)=-3.289e-05, DF405_09(199,1C)=-9.806e-05, DF405_10(199,2X)=-7.163e-05, DF405_11(199,5X)=-8.577e-05, DF405_12(199,1X)=-9.572e-05, DF406_01(194,1C)=-0.00021978, DF406_02(194,2X)=0.00050089, DF406_03(194,5X)=-3.95e-06, DF406_04(194,1X)=0.00022199, DF406_05(195,1C)=0.00039012, DF406_06(195,2X)=-0.00017093, DF406_07(195,5X)=-0.00016689, DF406_08(195,1X)=-0.00018814, DF406_09(199,1C)=0.00028417, DF406_10(199,2X)=-0.0001959, DF406_11(199,5X)=0.0002057, DF406_12(199,1X)=0.00017754, DF407_01(194,1C)=516, DF407_02(194,2X)=462, DF407_03(194,5X)=684, DF407_04(194,1X)=365, DF407_05(195,1C)=648, DF407_06(195,2X)=649, DF407_07(195,5X)=649, DF407_08(195,1X)=649, DF407_09(199,1C)=568, DF407_10(199,2X)=704, DF407_11(199,5X)=704, DF407_12(199,1X)=704, DF420_01(194,1C)=0, DF420_02(194,2X)=0, DF420_03(194,5X)=0, DF420_04(194,1X)=0, DF420_05(195,1C)=0, DF420_06(195,2X)=0, DF420_07(195,5X)=0, DF420_08(195,1X)=0, DF420_09(199,1C)=0, DF420_10(199,2X)=0, DF420_11(199,5X)=0, DF420_12(199,1X)=0, DF408_01(194,1C)=7760, DF408_02(194,2X)=9184, DF408_03(194,5X)=8832, DF408_04(194,1X)=8832, DF408_05(195,1C)=12448, DF408_06(195,2X)=12928, DF408_07(195,5X)=13472, DF408_08(195,1X)=13104, DF408_09(199,1C)=9808, DF408_10(199,2X)=11184, DF408_11(199,5X)=11728, DF408_12(199,1X)=10320, DF404_01(194,1C)=-0.1064, DF404_02(194,2X)=-1.6384, DF404_03(194,5X)=-1.6384, DF404_04(194,1X)=-1.6384, DF404_05(195,1C)=-0.5875, DF404_06(195,2X)=-1.6384, DF404_07(195,5X)=-1.6384, DF404_08(195,1X)=-1.6384, DF404_09(199,1C)=-0.413, DF404_10(199,2X)=-1.6384, DF404_11(199,5X)=-1.6384, DF404_12(199,1X)=-1.6384)>",
        )

        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-RTCM3.log"), "rb")
        i = 0
        raw = 0
        rtr = RTCMReader(stream, scaling=True, labelmsm=True)
        for raw, parsed in rtr.iterate():
            if raw is not None:
                self.assertEqual(str(parsed), EXPECTED_RESULTS[i])
                i += 1
        stream.close()

    def testNTRIP(
        self,
    ):  # test NTRIP output stream
        EXPECTED_RESULTS = "<RTCM(1075, DF002=1075, DF003=2690, GNSSEpoch=386583000, DF393=1, DF409=0, DF001_7=0, DF411=1, DF412=0, DF417=0, DF418=0, DF394=292770813713580032, NSat=6, DF395=1073872896, NSig=2, DF396=4031, DF397_01(006)=80, DF397_02(012)=67, DF397_03(019)=74, DF397_04(024)=70, DF397_05(025)=69, DF397_06(032)=73, GNSSSpecific_01(006)=15, GNSSSpecific_02(012)=15, GNSSSpecific_03(019)=15, GNSSSpecific_04(024)=15, GNSSSpecific_05(025)=15, GNSSSpecific_06(032)=15, DF398_01(006)=0.99414062, DF398_02(012)=0.13085938, DF398_03(019)=0.84179688, DF398_04(024)=0.25292969, DF398_05(025)=0.97949219, DF398_06(032)=0.67773438, DF399_01(006)=-421, DF399_02(012)=-112, DF399_03(019)=351, DF399_04(024)=444, DF399_05(025)=-469, DF399_06(032)=-303, DF400_01(006,1C)=0.00034624, DF400_02(006,2S)=0.00039607, DF400_03(012,1C)=-0.0004673, DF400_04(012,2S)=-0.00045753, DF400_05(019,1C)=-0.00012845, DF400_06(019,n/a)=-0.00033915, DF400_07(024,1C)=-0.00031781, DF400_08(024,2S)=-0.0003649, DF400_09(025,1C)=-0.00034219, DF400_10(025,2S)=-0.000184, DF400_11(032,1C)=-0.00016075, DF400_12(032,2S)=8.631e-05, DF401_01(006,1C)=0.00104086, DF401_02(006,2S)=0.00304812, DF401_03(012,1C)=-0.00018586, DF401_04(012,2S)=-0.00140482, DF401_05(019,1C)=-0.00256613, DF401_06(019,n/a)=-0.00256643, DF401_07(024,1C)=0.00079059, DF401_08(024,2S)=0.00109615, DF401_09(025,1C)=0.00158546, DF401_10(025,2S)=0.00250093, DF401_11(032,1C)=0.00217031, DF401_12(032,2S)=-0.00099188, DF402_01(006,1C)=13, DF402_02(006,2S)=14, DF402_03(012,1C)=0, DF402_04(012,2S)=0, DF402_05(019,1C)=2, DF402_06(019,n/a)=12, DF402_07(024,1C)=11, DF402_08(024,2S)=3, DF402_09(025,1C)=6, DF402_10(025,2S)=12, DF402_11(032,1C)=11, DF402_12(032,2S)=1, DF420_01(006,1C)=1, DF420_02(006,2S)=1, DF420_03(012,1C)=0, DF420_04(012,2S)=1, DF420_05(019,1C)=0, DF420_06(019,n/a)=0, DF420_07(024,1C)=1, DF420_08(024,2S)=1, DF420_09(025,1C)=0, DF420_10(025,2S)=0, DF420_11(032,1C)=1, DF420_12(032,2S)=0, DF403_01(006,1C)=51, DF403_02(006,2S)=48, DF403_03(012,1C)=52, DF403_04(012,2S)=49, DF403_05(019,1C)=12, DF403_06(019,n/a)=3, DF403_07(024,1C)=57, DF403_08(024,2S)=5, DF403_09(025,1C)=17, DF403_10(025,2S)=62, DF403_11(032,1C)=59, DF403_12(032,2S)=47, DF404_01(006,1C)=-1.5415, DF404_02(006,2S)=0.58, DF404_03(012,1C)=-1.1856, DF404_04(012,2S)=1.4879, DF404_05(019,1C)=-0.6026, DF404_06(019,n/a)=-0.2633, DF404_07(024,1C)=-0.4544, DF404_08(024,2S)=0.916, DF404_09(025,1C)=0.0, DF404_10(025,2S)=0, DF404_11(032,1C)=0, DF404_12(032,2S)=0)>"
        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-NTRIP.log"), "rb")
        i = 0
        raw = 0
        rtr = RTCMReader(stream, quitonerror=rtt.ERR_RAISE)
        for raw, parsed in rtr:
            if raw is not None:
                i += 1
        self.assertEqual(str(parsed), EXPECTED_RESULTS)
        stream.close()

    def testNTRIP(
        self,
    ):  # test NTRIP output stream
        EXPECTED_RESULTS = (
            "1075",
            "1085",
            "1125",
            "1095",
            "1230",
            "1006",
            "1008",
            "1033",
            "1230",
            "1075",
            "1085",
            "1125",
            "1095",
            "1230",
            "1006",
            "1008",
            "1033",
            "1230",
            "1075",
            "1085",
            "1125",
            "1095",
            "1230",
            "1006",
            "1008",
            "1033",
            "1230",
            "1075",
            "1085",
            "1125",
            "1095",
            "1230",
            "1006",
            "1008",
            "1033",
            "1230",
            "1075",
            "1085",
            "1125",
            "1095",
            "1230",
            "1006",
            "1008",
            "1033",
            "1230",
            "1075",
            "1085",
            "1125",
            "1095",
            "1230",
            "1006",
            "1008",
            "1033",
            "1230",
            "1075",
            "1085",
            "1125",
            "1095",
            "1230",
            "1006",
            "1008",
            "1033",
            "1230",
            "1075",
            "1085",
            "1125",
            "1095",
            "1230",
            "1006",
            "1008",
            "1033",
            "1230",
            "1075",
        )
        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-NTRIP.log"), "rb")
        i = 0
        raw = 0
        rtr = RTCMReader(stream, scaling=True, labelmsm=True)
        for raw, parsed in rtr:
            if raw is not None:
                # print(parsed)
                self.assertEqual(f"{parsed.identity}", EXPECTED_RESULTS[i])
                i += 1
        stream.close()

    def testSerialize(self):  # test serialize()
        payload = self._raw1005[3:-3]
        msg1 = RTCMReader.parse(self._raw1005)
        msg2 = RTCMMessage(payload=payload)
        res = msg1.serialize()
        self.assertEqual(res, self._raw1005)
        res1 = msg2.serialize()
        self.assertEqual(res, self._raw1005)

    def testsetattr(self):  # test immutability
        EXPECTED_ERROR = (
            "Object is immutable. Updates to DF002 not permitted after initialisation."
        )
        with self.assertRaisesRegex(rte.RTCMMessageError, EXPECTED_ERROR):
            msg = RTCMReader.parse(self._raw1005)
            msg.DF002 = 9999

    def testrepr(self):  # test repr, check eval recreates original object
        EXPECTED_RESULT = "RTCMMessage(payload=b'>\\xd0\\x00\\x03\\x8aX\\xd9I<\\x87/4\\x10\\x9d\\x07\\xd6\\xafH ')"
        msg1 = RTCMReader.parse(self._raw1005)
        self.assertEqual(repr(msg1), EXPECTED_RESULT)
        msg2 = eval(repr(msg1))
        self.assertEqual(str(msg1), str(msg2))

    def testpayload(self):  # test payload getter
        msg = RTCMReader.parse(self._raw1005)
        payload = self._raw1005[3:-3]
        self.assertEqual(msg.payload, payload)

    def testnopayload(self):  # test null payload
        EXPECTED_ERROR = "Payload must be specified"
        with self.assertRaisesRegex(rte.RTCMMessageError, EXPECTED_ERROR):
            msg = RTCMMessage(kwarg=0)

    def testgroups(self):  # test message with repeating group (1007)
        EXPECTED_RESULT = "<RTCM(1007, DF002=1007, DF003=1234, DF029=3, DF030_01=A, DF030_02=B, DF030_03=C, DF031=234)>"
        msg1 = RTCMMessage(payload=self._payload1007)
        msg2 = RTCMReader.parse(self._raw1007)
        self.assertEqual(str(msg1), EXPECTED_RESULT)
        self.assertEqual(str(msg2), EXPECTED_RESULT)

    def testnestedgroups(self):  # test message with nested repeating group (1059, 1065)
        EXPECTED_RESULT = "<RTCM(1065, DF002=1065, DF386=12345, DF391=3, DF388=0, DF413=1, DF414=1, DF415=1, DF387=2, DF384_01=23, DF379_01=2, DF381_01_01=4, DF383_01_01=0.07, DF381_01_02=2, DF383_01_02=0.09, DF384_02=26, DF379_02=1, DF381_02_01=3, DF383_02_01=0.05)>"
        msg = RTCMReader.parse(self._raw1065, scaling=True)
        self.assertEqual(str(msg), EXPECTED_RESULT)

    def testbadCRC(
        self,
    ):  # test mixed stream of NMEA, UBX & RTCM messages with invalid RTCM CRC
        EXPECTED_ERROR = "RTCM3 message invalid - failed CRC: (.*)"
        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-MIXED-RTCM3BADCRC.log"), "rb")
        i = 0
        raw = 0
        rtr = RTCMReader(stream, protfilter=7, quitonerror=rtt.ERR_RAISE)
        with self.assertRaisesRegex(rte.RTCMParseError, EXPECTED_ERROR):
            for raw, parsed in rtr:
                if raw is not None:
                    print(parsed)
                    i += 1
        stream.close()

    def testbadCRC2(
        self,
    ):  # test mixed stream of NMEA, UBX & RTCM messages with invalid RTCM CRC
        EXPECTED_ERROR = "I ignored the following error: RTCM3 message invalid - failed CRC: b'Z\\xd7\\xf7'"
        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-MIXED-RTCM3BADCRC.log"), "rb")
        self.catchio()
        rtr = RTCMReader(
            stream,
            protfilter=7,
            quitonerror=rtt.ERR_LOG,
            errorhandler=lambda e: print(f"I ignored the following error: {e}"),
        )
        for raw, parsed in rtr:
            if raw is not None:
                pass
        stream.close()
        output = self.restoreio()
        self.assertEqual(output, EXPECTED_ERROR)

    def testbadCRC3(
        self,
    ):  # test mixed stream of NMEA, UBX & RTCM messages with invalid RTCM CRC
        EXPECTED_ERROR = "RTCM3 message invalid - failed CRC: b'Z\\xd7\\xf7'"
        dirname = os.path.dirname(__file__)
        stream = open(os.path.join(dirname, "pygpsdata-MIXED-RTCM3BADCRC.log"), "rb")
        self.catchio()
        rtr = RTCMReader(
            stream,
            protfilter=7,
            quitonerror=rtt.ERR_LOG,
            errorhandler=None,
        )
        for raw, parsed in rtr:
            if raw is not None:
                pass
        stream.close()
        output = self.restoreio()
        self.assertEqual(output, EXPECTED_ERROR)


if __name__ == "__main__":
    # import sys;sys.argv = ['', 'Test.testName']
    unittest.main()
