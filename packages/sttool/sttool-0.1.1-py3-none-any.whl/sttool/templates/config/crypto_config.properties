#================================ Common Properties for using Krypto starts here  ===============================#

#Required parameter for all modes of operation.
#Possible values - {register | pdx-encryption | ptx-encryption | i2s-conversion | i2s-version-check| i2s-compat-check}
#Example - mode=register or mode=pdx-encryption
mode=i2s-version-check

#Optional parameter to set the loggging level for logback
#Allowed values include 'OFF', 'FATAL', 'ERROR', 'WARNING', 'INFO', 'DEBUG', 'ALL'
#log-level=

#Required parameter for {pdx-encryption | ptx-encryption} operation modes.
#Encryption key identifier. Cannot be null or empty.
#key-identifier=

#Required parameter for {pdx-encryption | ptx-encryption | i2s-conversion | i2s-compat-check | i2s-version-check} operation modes.
#For operation modes {pdx-encryption | ptx-encryption} - Accepts absolute path of source file or directory. Possible values - {FILE | DIRECTORY} i.e. accepts both file and directory.
#Example - source=D:\\input.pdx (in case the input is packaged PDX file) or source=D:\\input.ptx (in case the input is packaged PTX file)
#or source=D:\\inputFolder (in case the input is ODX or OTX project)
#For operation modes {i2s-conversion | i2s-compat-check | i2s-version-check} - Accepts only file path not the directory. Possible values - {FILE}.
#Example - source=D:\\input.pdx or D:\\input.i2s
#source=

#Required parameter for {pdx-encryption | ptx-encryption | i2s-conversion} operation modes.
#For operation modes {pdx-encryption | ptx-encryption} - Accepts absolute path of destination file or directory. Possible values - {FILE | DIRECTORY} i.e. accepts both file and directory.
#Example - destination=D:\\output.pdx or destination=D:\\output.ptx or destination=D:\\outputFolder
#For operation modes {i2s-conversion} - Accepts only directory. Possible values - {DIRECTORY}.
#Example - destination=D:\\outputFolder
#destination=

#================================ Common Properties for using Krypto ends here  ===============================#



#================================ Properties for PDX Encryption starts here  ===============================#


#================================ Properties for PDX Encryption ends here  ===============================#



#================================ Properties for PTX Encryption starts here  ===============================#

#Set company details
#company=

#Company product/platform name or identifier
#Required parameter for {ptx-encryption} operation mode
#product-name=

#Company product/platform version or version identifier
#Required parameter for {ptx-encryption} operation mode
#product-version=

#Path to external translation resources directory
#Optional parameter for {ptx-encryption} operation mode
#translation-resource-location=

#Comma separated list of folders present in source directory that needs to be packaged inside ptx.
#Required parameter for {ptx-encryption} operation mode only case of creation of encrypted PTX from Otx source project
#The names of directories are case sensitive
# e.g usage otx-source-directories=src,bin,resources
otx-source-directories=src,bin

#================================ Properties for PTX Encryption ends here  ===============================#



#================================ All Properties Related to Licensing starts here  ===============================#

#Required for all modes
#Set Email ID
email-id=

#Set first name of the user
#Required parameter for {register} operation modes.
#First Name Cannot be null or empty.
first-name=

#Set last name of the user
#Required parameter for {register} operation modes.
#Last Name Cannot be null or empty.
last-name=

#Set contact information of user
contact=

#Set company details
#company=

#Set GDPR Status
#Required parameter for {register} operation modes.
#GDPR Status Cannot be null or empty. it take boolean as input i.e true | false
gdpr-accepted=

#Network setting properties
proxy-host=
proxy-port=
proxy-set=false
use-system-proxies=false

#Set limas url
limas-url={{active_url}}


#User directory
#Can be used to keep licenses in different folder (recommended is Service tester's User directory)
user-directory=C://ProgramData//KDCPServiceTester//license

#Limas Root Feature Id for Krypto
root-feature-id=com.kpit.krypto

#================================ All Properties Related to i2s automation starts here ===============================#

#Required parameter for {i2s-conversion} operation mode
#The name of the resulting i2s file (e.g.: myBinaryFile_X.Y.Z.v<timestamp>.i2s with X.Y.Z being the trafo version)
#project-name=

#Optional parameter for {i2s-conversion} operation mode.
#Generates two globa VIS containing containing customer specific logical links
#all-in-one=

#Optional parameter for {i2s-conversion} operation mode.
#Generates a default VIS containing one logical link per BV
#gen-vis=

#Optional parameter for {i2s-conversion} operation mode.
#Checks if the ODX data is valid by cross-checking with the odx.xsd
#validate=

#Optional parameter for {i2s-conversion} operation mode.
#Compresses EVs in case they don't contain extra value.
#compress=

#Optional parameter for {i2s-conversion} operation mode.
#Flag for handling diamond inheritance for services by taking the most specific one declared. If not set an exception will be thrown.
#handle-diamond-inheritance=

#Optional parameter for {i2s-conversion} operation mode.
#Converts also the declared ADMIN-DATA in the ODX. Otherwise it will be ignored and not available in the i2s file
#handle-admin-data=

#================================ All Properties Related to i2s automation ends here ===============================#
